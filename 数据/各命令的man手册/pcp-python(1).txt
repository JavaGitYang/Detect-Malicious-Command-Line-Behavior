
       pcp-python has been replaced by pmpython(1) which is preferred,
       however pcp-python is still installed to provided backwards
       compatibility.
       pcp-python provides a way to run python scripts using a customisable
       python binary, rather than embedding any particular version of python
       into each script.
       This can be useful as it allows version-independent python code to be
       run anywhere.  All python modules shipped with PCP support versions
       2.6 and later (in the python2 series), and 3.3 and later (in the
       python3 release series).
       Due to python monitoring and collecting scripts being relatively
       simple in PCP (not requiring new modules, language features, etc), it
       has been possible to ensure they work for all of the above python
       versions.  Thus, it is common for PCP python scripts to use a
       "shebang" line that invokes pcp-python as follows:
          #!/usr/bin/pcp python
       This allows the custom setting to be injected instead of a hard-coded
       python version, while still allowing the user to override the python
       version as follows:
          $ PCP_PYTHON_PROG=python3 /usr/bin/pcp python --version
          Python 3.3.2
          $ PCP_PYTHON_PROG=python2 /usr/bin/pcp python --version
          Python 2.7.5
       This is convenient for shipping identical scripts on multiple
       platforms, and for testing different python versions with the one
       script (e.g. in the case where multiple versions of python are
       installed, PCP_PYTHON_PROG can be set in the local environment to
       override the global setting).
       By default, the value of PCP_PYTHON_PROG from /etc/pcp.conf will be
       used.  The default value of this configuration parameter is set
       depending on some heuristics about the target build platform.  These
       heuristics favour the use of python3 in all recent releases of PCP,
       for those platforms that support it.
