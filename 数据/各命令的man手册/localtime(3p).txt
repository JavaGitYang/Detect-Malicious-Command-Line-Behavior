
       For localtime(): The functionality described on this reference page
       is aligned with the ISO C standard. Any conflict between the
       requirements described here and the ISO C standard is unintentional.
       This volume of POSIX.1‐2008 defers to the ISO C standard.
       The localtime() function shall convert the time in seconds since the
       Epoch pointed to by timer into a broken-down time, expressed as a
       local time. The function corrects for the timezone and any seasonal
       time adjustments.  Local timezone information is used as though
       localtime() calls tzset().
       The relationship between a time in seconds since the Epoch used as an
       argument to localtime() and the tm structure (defined in the <time.h>
       header) is that the result shall be as specified in the expression
       given in the definition of seconds since the Epoch (see the Base
       Definitions volume of POSIX.1‐2008, Section 4.15, Seconds Since the
       Epoch) corrected for timezone and any seasonal time adjustments,
       where the names in the structure and in the expression correspond.
       The same relationship shall apply for localtime_r().
       The localtime() function need not be thread-safe.
       The asctime(), ctime(), gmtime(), and localtime() functions shall
       return values in one of two static objects: a broken-down time
       structure and an array of type char.  Execution of any of the
       functions may overwrite the information returned in either of these
       objects by any of the other functions.
       The localtime_r() function shall convert the time in seconds since
       the Epoch pointed to by timer into a broken-down time stored in the
       structure to which result points. The localtime_r() function shall
       also return a pointer to that same structure.
       Unlike localtime(), the localtime_r() function is not required to set
       tzname.  If localtime_r() does not set tzname, it shall not set
       daylight and shall not set timezone.
