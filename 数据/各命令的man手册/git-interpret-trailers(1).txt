
       Help parsing or adding trailers lines, that look similar to RFC 822
       e-mail headers, at the end of the otherwise free-form part of a
       commit message.
       This command reads some patches or commit messages from either the
       <file> arguments or the standard input if no <file> is specified. If
       --parse is specified, the output consists of the parsed trailers.
       Otherwise, this command applies the arguments passed using the
       --trailer option, if any, to the commit message part of each input
       file. The result is emitted on the standard output.
       Some configuration variables control the way the --trailer arguments
       are applied to each commit message and the way any existing trailer
       in the commit message is changed. They also make it possible to
       automatically add some trailers.
       By default, a <token>=<value> or <token>:<value> argument given using
       --trailer will be appended after the existing trailers only if the
       last trailer has a different (<token>, <value>) pair (or if there is
       no existing trailer). The <token> and <value> parts will be trimmed
       to remove starting and trailing whitespace, and the resulting trimmed
       <token> and <value> will appear in the message like this:
           token: value
       This means that the trimmed <token> and <value> will be separated by
       ': ' (one colon followed by one space).
       By default the new trailer will appear at the end of all the existing
       trailers. If there is no existing trailer, the new trailer will
       appear after the commit message part of the output, and, if there is
       no line with only spaces at the end of the commit message part, one
       blank line will be added before the new trailer.
       Existing trailers are extracted from the input message by looking for
       a group of one or more lines that (i) is all trailers, or (ii)
       contains at least one Git-generated or user-configured trailer and
       consists of at least 25% trailers. The group must be preceded by one
       or more empty (or whitespace-only) lines. The group must either be at
       the end of the message or be the last non-whitespace lines before a
       line that starts with ---. Such three minus signs start the patch
       part of the message.
       When reading trailers, there can be whitespaces after the token, the
       separator and the value. There can also be whitespaces inside the
       token and the value. The value may be split over multiple lines with
       each subsequent line starting with whitespace, like the "folding" in
       RFC 822.
       Note that trailers do not follow and are not intended to follow many
       rules for RFC 822 headers. For example they do not follow the
       encoding rules and probably many other rules.
