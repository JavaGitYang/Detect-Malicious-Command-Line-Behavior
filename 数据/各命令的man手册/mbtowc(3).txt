
       The main case for this function is when s is not NULL and pwc is not
       NULL.  In this case, the mbtowc() function inspects at most n bytes
       of the multibyte string starting at s, extracts the next complete
       multibyte character, converts it to a wide character and stores it at
       *pwc.  It updates an internal shift state known only to the mbtowc()
       function.  If s does not point to a null byte ('\0'), it returns the
       number of bytes that were consumed from s, otherwise it returns 0.
       If the n bytes starting at s do not contain a complete multibyte
       character, or if they contain an invalid multibyte sequence, mbtowc()
       returns -1.  This can happen even if n >= MB_CUR_MAX, if the
       multibyte string contains redundant shift sequences.
       A different case is when s is not NULL but pwc is NULL.  In this
       case, the mbtowc() function behaves as above, except that it does not
       store the converted wide character in memory.
       A third case is when s is NULL.  In this case, pwc and n are ignored.
       The mbtowc() function resets the shift state, only known to this
       function, to the initial state, and returns nonzero if the encoding
       has nontrivial shift state, or zero if the encoding is stateless.
