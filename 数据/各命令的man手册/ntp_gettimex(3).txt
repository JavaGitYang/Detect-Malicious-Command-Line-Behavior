
       Both of these APIs return information to the caller via the ntv
       argument, a structure of the following type:
           struct ntptimeval {
               struct timeval time;        /* Current time */
               long int maxerror;          /* Maximum error */
               long int esterror;          /* Estimated error */
               long int tai;               /* TAI offset */
               /* Further padding bytes allowing for future expansion */
           };
       The fields of this structure are as follows:
       time   The current time, expressed as a timeval structure:
                  struct timeval {
                      time_t      tv_sec;   /* Seconds since the Epoch */
                      suseconds_t tv_usec;  /* Microseconds */
                  };
       maxerror
              Maximum error, in microseconds.  This value can be initialized
              by ntp_adjtime(3), and is increased periodically (on Linux:
              each second), but is clamped to an upper limit (the kernel
              constant NTP_PHASE_MAX, with a value of 16,000).
       esterror
              Estimated error, in microseconds.  This value can be set via
              ntp_adjtime(3) to contain an estimate of the difference
              between the system clock and the true time.  This value is not
              used inside the kernel.
       tai    TAI (Atomic International Time) offset.
       ntp_gettime() returns an ntptimeval structure in which the time, max‚Äê
       error, and esterror fields are filled in.
       ntp_gettimex() performs the same task as ntp_gettime(), but also
       returns information in the tai field.
