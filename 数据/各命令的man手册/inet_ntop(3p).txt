
       The inet_ntop() function shall convert a numeric address into a text
       string suitable for presentation. The af argument shall specify the
       family of the address. This can be AF_INET or AF_INET6.  The src
       argument points to a buffer holding an IPv4 address if the af
       argument is AF_INET, or an IPv6 address if the af argument is
       AF_INET6; the address must be in network byte order. The dst argument
       points to a buffer where the function stores the resulting text
       string; it shall not be NULL. The size argument specifies the size of
       this buffer, which shall be large enough to hold the text string
       (INET_ADDRSTRLEN characters for IPv4, INET6_ADDRSTRLEN characters for
       IPv6).
       The inet_pton() function shall convert an address in its standard
       text presentation form into its numeric binary form. The af argument
       shall specify the family of the address. The AF_INET and AF_INET6
       address families shall be supported. The src argument points to the
       string being passed in. The dst argument points to a buffer into
       which the function stores the numeric address; this shall be large
       enough to hold the numeric address (32 bits for AF_INET, 128 bits for
       AF_INET6).
       If the af argument of inet_pton() is AF_INET, the src string shall be
       in the standard IPv4 dotted-decimal form:
           ddd.ddd.ddd.ddd
       where "ddd" is a one to three digit decimal number between 0 and 255
       (see inet_addr(3p)).  The inet_pton() function does not accept other
       formats (such as the octal numbers, hexadecimal numbers, and fewer
       than four numbers that inet_addr() accepts).
       If the af argument of inet_pton() is AF_INET6, the src string shall
       be in one of the following standard IPv6 text forms:
        1. The preferred form is "x:x:x:x:x:x:x:x", where the 'x's are the
           hexadecimal values of the eight 16-bit pieces of the address.
           Leading zeros in individual fields can be omitted, but there
           shall be at least one numeral in every field.
        2. A string of contiguous zero fields in the preferred form can be
           shown as "::".  The "::" can only appear once in an address.
           Unspecified addresses ("0:0:0:0:0:0:0:0") may be represented
           simply as "::".
        3. A third form that is sometimes more convenient when dealing with
           a mixed environment of IPv4 and IPv6 nodes is
           "x:x:x:x:x:x:d.d.d.d", where the 'x's are the hexadecimal values
           of the six high-order 16-bit pieces of the address, and the 'd's
           are the decimal values of the four low-order 8-bit pieces of the
           address (standard IPv4 representation).
       Note:     A more extensive description of the standard
                 representations of IPv6 addresses can be found in RFC 2373.
