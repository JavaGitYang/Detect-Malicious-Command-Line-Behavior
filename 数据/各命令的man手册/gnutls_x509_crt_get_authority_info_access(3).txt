
       Note that a simpler API to access the authority info data is provided
       by gnutls_x509_aia_get() and gnutls_x509_ext_import_aia().
       This function extracts the Authority Information Access (AIA)
       extension, see RFC 5280 section 4.2.2.1 for more information.  The
       AIA extension holds a sequence of AccessDescription (AD) data.
       The  seq input parameter is used to indicate which member of the
       sequence the caller is interested in.  The first member is 0, the
       second member 1 and so on.  When the  seq value is out of bounds,
       GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE is returned.
       The type of data returned in  data is specified via  what which
       should be gnutls_info_access_what_t values.
       If  what is GNUTLS_IA_ACCESSMETHOD_OID then  data will hold the
       accessMethod OID (e.g., "1.3.6.1.5.5.7.48.1").
       If  what is GNUTLS_IA_ACCESSLOCATION_GENERALNAME_TYPE,  data will
       hold the accessLocation GeneralName type (e.g.,
       "uniformResourceIdentifier").
       If  what is GNUTLS_IA_URI,  data will hold the accessLocation URI
       data.  Requesting this  what value leads to an error if the
       accessLocation is not of the "uniformResourceIdentifier" type.
       If  what is GNUTLS_IA_OCSP_URI,  data will hold the OCSP URI.
       Requesting this  what value leads to an error if the accessMethod is
       not 1.3.6.1.5.5.7.48.1 aka OCSP, or if accessLocation is not of the
       "uniformResourceIdentifier" type. In that case
       GNUTLS_E_UNKNOWN_ALGORITHM will be returned, and  seq should be
       increased and this function called again.
       If  what is GNUTLS_IA_CAISSUERS_URI,  data will hold the caIssuers
       URI.  Requesting this  what value leads to an error if the
       accessMethod is not 1.3.6.1.5.5.7.48.2 aka caIssuers, or if
       accessLocation is not of the "uniformResourceIdentifier" type.  In
       that case handle as in GNUTLS_IA_OCSP_URI.
       More  what values may be allocated in the future as needed.
       If  data is NULL, the function does the same without storing the
       output data, that is, it will set  critical and do error checking as
       usual.
       The value of the critical flag is returned in * critical .  Supply a
       NULL  critical if you want the function to make sure the extension is
       non-critical, as required by RFC 5280.
