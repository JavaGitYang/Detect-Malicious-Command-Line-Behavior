
       The strerror() function returns a pointer to a string that describes
       the error code passed in the argument errnum, possibly using the
       LC_MESSAGES part of the current locale to select the appropriate
       language.  (For example, if errnum is EINVAL, the returned
       description will be "Invalid argument".)  This string must not be
       modified by the application, but may be modified by a subsequent call
       to strerror() or strerror_l().  No other library function, including
       perror(3), will modify this string.
   strerror_r()
       The strerror_r() function is similar to strerror(), but is thread
       safe.  This function is available in two versions: an XSI-compliant
       version specified in POSIX.1-2001 (available since glibc 2.3.4, but
       not POSIX-compliant until glibc 2.13), and a GNU-specific version
       (available since glibc 2.0).  The XSI-compliant version is provided
       with the feature test macros settings shown in the SYNOPSIS;
       otherwise the GNU-specific version is provided.  If no feature test
       macros are explicitly defined, then (since glibc 2.4) _POSIX_C_SOURCE
       is defined by default with the value 200112L, so that the XSI-
       compliant version of strerror_r() is provided by default.
       The XSI-compliant strerror_r() is preferred for portable
       applications.  It returns the error string in the user-supplied
       buffer buf of length buflen.
       The GNU-specific strerror_r() returns a pointer to a string
       containing the error message.  This may be either a pointer to a
       string that the function stores in buf, or a pointer to some
       (immutable) static string (in which case buf is unused).  If the
       function stores a string in buf, then at most buflen bytes are stored
       (the string may be truncated if buflen is too small and errnum is
       unknown).  The string always includes a terminating null byte ('\0').
   strerror_l()
       strerror_l() is like strerror(), but maps errnum to a locale-
       dependent error message in the locale specified by locale.  The
       behavior of strerror_l() is undefined if locale is the special locale
       object LC_GLOBAL_LOCALE or is not a valid locale object handle.
