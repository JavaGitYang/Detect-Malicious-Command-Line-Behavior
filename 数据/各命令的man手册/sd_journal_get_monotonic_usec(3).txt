
       sd_journal_get_realtime_usec() gets the realtime (wallclock)
       timestamp of the current journal entry. It takes two arguments: the
       journal context object and a pointer to a 64-bit unsigned integer to
       store the timestamp in. The timestamp is in microseconds since the
       epoch, i.e.  CLOCK_REALTIME.
       sd_journal_get_monotonic_usec() gets the monotonic timestamp of the
       current journal entry. It takes three arguments: the journal context
       object, a pointer to a 64-bit unsigned integer to store the timestamp
       in, as well as a 128-bit ID buffer to store the boot ID of the
       monotonic timestamp. The timestamp is in microseconds since boot-up
       of the specific boot, i.e.  CLOCK_MONOTONIC. Since the monotonic
       clock begins new with every reboot, it only defines a well-defined
       point in time when used together with an identifier identifying the
       boot. See sd_id128_get_boot(3) for more information. If the boot ID
       parameter is passed NULL, the function will fail if the monotonic
       timestamp of the current entry is not of the current system boot.
       Note that these functions will not work before sd_journal_next(3) (or
       related call) has been called at least once, in order to position the
       read pointer at a valid entry.
