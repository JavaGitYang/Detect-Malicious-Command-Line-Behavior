
     ssh-keygen generates, manages and converts authentication keys for
     ssh(1).  ssh-keygen can create keys for use by SSH protocol version 2.
     The type of key to be generated is specified with the -t option.  If
     invoked without any arguments, ssh-keygen will generate an RSA key.
     ssh-keygen is also used to generate groups for use in Diffie-Hellman
     group exchange (DH-GEX).  See the MODULI GENERATION section for
     details.
     Finally, ssh-keygen can be used to generate and update Key Revocation
     Lists, and to test whether given keys have been revoked by one.  See
     the KEY REVOCATION LISTS section for details.
     Normally each user wishing to use SSH with public key authentication
     runs this once to create the authentication key in ~/.ssh/id_dsa,
     ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519 or ~/.ssh/id_rsa.  Additionally, the
     system administrator may use this to generate host keys, as seen in
     /etc/rc.
     Normally this program generates the key and asks for a file in which to
     store the private key.  The public key is stored in a file with the
     same name but “.pub” appended.  The program also asks for a passphrase.
     The passphrase may be empty to indicate no passphrase (host keys must
     have an empty passphrase), or it may be a string of arbitrary length.
     A passphrase is similar to a password, except it can be a phrase with a
     series of words, punctuation, numbers, whitespace, or any string of
     characters you want.  Good passphrases are 10-30 characters long, are
     not simple sentences or otherwise easily guessable (English prose has
     only 1-2 bits of entropy per character, and provides very bad
     passphrases), and contain a mix of upper and lowercase letters, num‐
     bers, and non-alphanumeric characters.  The passphrase can be changed
     later by using the -p option.
     There is no way to recover a lost passphrase.  If the passphrase is
     lost or forgotten, a new key must be generated and the corresponding
     public key copied to other machines.
     For keys stored in the newer OpenSSH format, there is also a comment
     field in the key file that is only for convenience to the user to help
     identify the key.  The comment can tell what the key is for, or what‐
     ever is useful.  The comment is initialized to “user@host” when the key
     is created, but can be changed using the -c option.
     After a key is generated, instructions below detail where the keys
     should be placed to be activated.
     The options are as follows:
     -A      For each of the key types (rsa, dsa, ecdsa and ed25519) for
             which host keys do not exist, generate the host keys with the
             default key file path, an empty passphrase, default bits for
             the key type, and default comment.  If -f has also been speci‐
             fied, its argument is used as a prefix to the default path for
             the resulting host key files.  This is used by /etc/rc to gen‐
             erate new host keys.
     -a rounds
             When saving a new-format private key (i.e. an ed25519 key or
             when the -o flag is set), this option specifies the number of
             KDF (key derivation function) rounds used.  Higher numbers
             result in slower passphrase verification and increased resis‐
             tance to brute-force password cracking (should the keys be
             stolen).
             When screening DH-GEX candidates (using the -T command).  This
             option specifies the number of primality tests to perform.
     -B      Show the bubblebabble digest of specified private or public key
             file.
     -b bits
             Specifies the number of bits in the key to create.  For RSA
             keys, the minimum size is 1024 bits and the default is 2048
             bits.  Generally, 2048 bits is considered sufficient.  DSA keys
             must be exactly 1024 bits as specified by FIPS 186-2.  For
             ECDSA keys, the -b flag determines the key length by selecting
             from one of three elliptic curve sizes: 256, 384 or 521 bits.
             Attempting to use bit lengths other than these three values for
             ECDSA keys will fail.  Ed25519 keys have a fixed length and the
             -b flag will be ignored.
     -C comment
             Provides a new comment.
     -c      Requests changing the comment in the private and public key
             files.  This operation is only supported for keys stored in the
             newer OpenSSH format.  The program will prompt for the file
             containing the private keys, for the passphrase if the key has
             one, and for the new comment.
     -D pkcs11
             Download the RSA public keys provided by the PKCS#11 shared
             library pkcs11.  When used in combination with -s, this option
             indicates that a CA key resides in a PKCS#11 token (see the
             CERTIFICATES section for details).
     -E fingerprint_hash
             Specifies the hash algorithm used when displaying key finger‐
             prints.  Valid options are: “md5” and “sha256”.  The default is
             “sha256”.
     -e      This option will read a private or public OpenSSH key file and
             print to stdout the key in one of the formats specified by the
             -m option.  The default export format is “RFC4716”.  This
             option allows exporting OpenSSH keys for use by other programs,
             including several commercial SSH implementations.
     -F hostname
             Search for the specified hostname in a known_hosts file, list‐
             ing any occurrences found.  This option is useful to find
             hashed host names or addresses and may also be used in conjunc‐
             tion with the -H option to print found keys in a hashed format.
     -f filename
             Specifies the filename of the key file.
     -G output_file
             Generate candidate primes for DH-GEX.  These primes must be
             screened for safety (using the -T option) before use.
     -g      Use generic DNS format when printing fingerprint resource
             records using the -r command.
     -H      Hash a known_hosts file.  This replaces all hostnames and
             addresses with hashed representations within the specified
             file; the original content is moved to a file with a .old suf‐
             fix.  These hashes may be used normally by ssh and sshd, but
             they do not reveal identifying information should the file's
             contents be disclosed.  This option will not modify existing
             hashed hostnames and is therefore safe to use on files that mix
             hashed and non-hashed names.
     -h      When signing a key, create a host certificate instead of a user
             certificate.  Please see the CERTIFICATES section for details.
     -I certificate_identity
             Specify the key identity when signing a public key.  Please see
             the CERTIFICATES section for details.
     -i      This option will read an unencrypted private (or public) key
             file in the format specified by the -m option and print an
             OpenSSH compatible private (or public) key to stdout.  This
             option allows importing keys from other software, including
             several commercial SSH implementations.  The default import
             format is “RFC4716”.
     -J num_lines
             Exit after screening the specified number of lines while per‐
             forming DH candidate screening using the -T option.
     -j start_line
             Start screening at the specified line number while performing
             DH candidate screening using the -T option.
     -K checkpt
             Write the last line processed to the file checkpt while per‐
             forming DH candidate screening using the -T option.  This will
             be used to skip lines in the input file that have already been
             processed if the job is restarted.
     -k      Generate a KRL file.  In this mode, ssh-keygen will generate a
             KRL file at the location specified via the -f flag that revokes
             every key or certificate presented on the command line.
             Keys/certificates to be revoked may be specified by public key
             file or using the format described in the KEY REVOCATION LISTS
             section.
     -L      Prints the contents of one or more certificates.
     -l      Show fingerprint of specified public key file.  For RSA and DSA
             keys ssh-keygen tries to find the matching public key file and
             prints its fingerprint.  If combined with -v, a visual ASCII
             art representation of the key is supplied with the fingerprint.
     -M memory
             Specify the amount of memory to use (in megabytes) when gener‐
             ating candidate moduli for DH-GEX.
     -m key_format
             Specify a key format for the -i (import) or -e (export) conver‐
             sion options.  The supported key formats are: “RFC4716” (RFC
             4716/SSH2 public or private key), “PKCS8” (PEM PKCS8 public
             key) or “PEM” (PEM public key).  The default conversion format
             is “RFC4716”.
     -N new_passphrase
             Provides the new passphrase.
     -n principals
             Specify one or more principals (user or host names) to be
             included in a certificate when signing a key.  Multiple princi‐
             pals may be specified, separated by commas.  Please see the
             CERTIFICATES section for details.
     -O option
             Specify a certificate option when signing a key.  This option
             may be specified multiple times.  See also the CERTIFICATES
             section for further details.
             At present, no standard options are valid for host keys.  The
             options that are valid for user certificates are:
             clear   Clear all enabled permissions.  This is useful for
                     clearing the default set of permissions so permissions
                     may be added individually.
             critical:name[=contents]
             extension:name[=contents]
                     Includes an arbitrary certificate critical option or
                     extension.  The specified name should include a domain
                     suffix, e.g. “name@example.com”.  If contents is speci‐
                     fied then it is included as the contents of the exten‐
                     sion/option encoded as a string, otherwise the exten‐
                     sion/option is created with no contents (usually indi‐
                     cating a flag).  Extensions may be ignored by a client
                     or server that does not recognise them, whereas unknown
                     critical options will cause the certificate to be
                     refused.
             force-command=command
                     Forces the execution of command instead of any shell or
                     command specified by the user when the certificate is
                     used for authentication.
             no-agent-forwarding
                     Disable ssh-agent(1) forwarding (permitted by default).
             no-port-forwarding
                     Disable port forwarding (permitted by default).
             no-pty  Disable PTY allocation (permitted by default).
             no-user-rc
                     Disable execution of ~/.ssh/rc by sshd(8) (permitted by
                     default).
             no-x11-forwarding
                     Disable X11 forwarding (permitted by default).
             permit-agent-forwarding
                     Allows ssh-agent(1) forwarding.
             permit-port-forwarding
                     Allows port forwarding.
             permit-pty
                     Allows PTY allocation.
             permit-user-rc
                     Allows execution of ~/.ssh/rc by sshd(8).
             permit-X11-forwarding
                     Allows X11 forwarding.
             source-address=address_list
                     Restrict the source addresses from which the certifi‐
                     cate is considered valid.  The address_list is a comma-
                     separated list of one or more address/netmask pairs in
                     CIDR format.
     -o      Causes ssh-keygen to save private keys using the new OpenSSH
             format rather than the more compatible PEM format.  The new
             format has increased resistance to brute-force password crack‐
             ing but is not supported by versions of OpenSSH prior to 6.5.
             Ed25519 keys always use the new private key format.
     -P passphrase
             Provides the (old) passphrase.
     -p      Requests changing the passphrase of a private key file instead
             of creating a new private key.  The program will prompt for the
             file containing the private key, for the old passphrase, and
             twice for the new passphrase.
     -Q      Test whether keys have been revoked in a KRL.
     -q      Silence ssh-keygen.
     -R hostname
             Removes all keys belonging to hostname from a known_hosts file.
             This option is useful to delete hashed hosts (see the -H option
             above).
     -r hostname
             Print the SSHFP fingerprint resource record named hostname for
             the specified public key file.
     -S start
             Specify start point (in hex) when generating candidate moduli
             for DH-GEX.
     -s ca_key
             Certify (sign) a public key using the specified CA key.  Please
             see the CERTIFICATES section for details.
             When generating a KRL, -s specifies a path to a CA public key
             file used to revoke certificates directly by key ID or serial
             number.  See the KEY REVOCATION LISTS section for details.
     -T output_file
             Test DH group exchange candidate primes (generated using the -G
             option) for safety.
     -t dsa | ecdsa | ed25519 | rsa
             Specifies the type of key to create.  The possible values are
             “dsa”, “ecdsa”, “ed25519”, or “rsa”.
     -U      When used in combination with -s, this option indicates that a
             CA key resides in a ssh-agent(1).  See the CERTIFICATES section
             for more information.
     -u      Update a KRL.  When specified with -k, keys listed via the com‐
             mand line are added to the existing KRL rather than a new KRL
             being created.
     -V validity_interval
             Specify a validity interval when signing a certificate.  A
             validity interval may consist of a single time, indicating that
             the certificate is valid beginning now and expiring at that
             time, or may consist of two times separated by a colon to indi‐
             cate an explicit time interval.
             The start time may be specified as the string “always” to indi‐
             cate the certificate has no specified start time, a date in
             YYYYMMDD format, a time in YYYYMMDDHHMM[SS] format, a relative
             time (to the current time) consisting of a minus sign followed
             by an interval in the format described in the TIME FORMATS sec‐
             tion of sshd_config(5).
             The end time may be specified as a YYYYMMDD date, a YYYYMMD‐
             DHHMM[SS] time, a relative time starting with a plus character
             or the string “forever” to indicate that the certificate has no
             expirty date.
             For example: “+52w1d” (valid from now to 52 weeks and one day
             from now), “-4w:+4w” (valid from four weeks ago to four weeks
             from now), “20100101123000:20110101123000” (valid from 12:30
             PM, January 1st, 2010 to 12:30 PM, January 1st, 2011),
             “-1d:20110101” (valid from yesterday to midnight, January 1st,
             2011).  “-1m:forever” (valid from one minute ago and never
             expiring).
     -v      Verbose mode.  Causes ssh-keygen to print debugging messages
             about its progress.  This is helpful for debugging moduli gen‐
             eration.  Multiple -v options increase the verbosity.  The max‐
             imum is 3.
     -W generator
             Specify desired generator when testing candidate moduli for DH-
             GEX.
     -y      This option will read a private OpenSSH format file and print
             an OpenSSH public key to stdout.
     -z serial_number
             Specifies a serial number to be embedded in the certificate to
             distinguish this certificate from others from the same CA.  The
             default serial number is zero.
             When generating a KRL, the -z flag is used to specify a KRL
             version number.
