
       The fpathconf() and pathconf() functions shall determine the current
       value of a configurable limit or option (variable) that is associated
       with a file or directory.
       For pathconf(), the path argument points to the pathname of a file or
       directory.
       For fpathconf(), the fildes argument is an open file descriptor.
       The name argument represents the variable to be queried relative to
       that file or directory. Implementations shall support all of the
       variables listed in the following table and may support others. The
       variables in the following table come from <limits.h> or <unistd.h>
       and the symbolic constants, defined in <unistd.h>, are the
       corresponding values used for name.
      ┌────────────────────────────┬──────────────────────────┬──────────────┐
      │         Variable           │      Value of name       │ Requirements │
      ├────────────────────────────┼──────────────────────────┼──────────────┤
      │{FILESIZEBITS}              │ _PC_FILESIZEBITS         │ 4,7          │
      │{LINK_MAX}                  │ _PC_LINK_MAX             │ 1            │
      │{MAX_CANON}                 │ _PC_MAX_CANON            │ 2            │
      │{MAX_INPUT}                 │ _PC_MAX_INPUT            │ 2            │
      │{NAME_MAX}                  │ _PC_NAME_MAX             │ 3,4          │
      │{PATH_MAX}                  │ _PC_PATH_MAX             │ 4,5          │
      │{PIPE_BUF}                  │ _PC_PIPE_BUF             │ 6            │
      │{POSIX2_SYMLINKS}           │ _PC_2_SYMLINKS           │ 4            │
      │{POSIX_ALLOC_SIZE_MIN}      │ _PC_ALLOC_SIZE_MIN       │ 10           │
      │{POSIX_REC_INCR_XFER_SIZE}  │ _PC_REC_INCR_XFER_SIZE   │ 10           │
      │{POSIX_REC_MAX_XFER_SIZE}   │ _PC_REC_MAX_XFER_SIZE    │ 10           │
      │{POSIX_REC_MIN_XFER_SIZE}   │ _PC_REC_MIN_XFER_SIZE    │ 10           │
      │{POSIX_REC_XFER_ALIGN}      │ _PC_REC_XFER_ALIGN       │ 10           │
      │{SYMLINK_MAX}               │ _PC_SYMLINK_MAX          │ 4,9          │
      │_POSIX_CHOWN_RESTRICTED     │ _PC_CHOWN_RESTRICTED     │ 7            │
      │_POSIX_NO_TRUNC             │ _PC_NO_TRUNC             │ 3,4          │
      │_POSIX_VDISABLE             │ _PC_VDISABLE             │ 2            │
      │_POSIX_ASYNC_IO             │ _PC_ASYNC_IO             │ 8            │
      │_POSIX_PRIO_IO              │ _PC_PRIO_IO              │ 8            │
      │_POSIX_SYNC_IO              │ _PC_SYNC_IO              │ 8            │
      │_POSIX_TIMESTAMP_RESOLUTION │ _PC_TIMESTAMP_RESOLUTION │ 1            │
      └────────────────────────────┴──────────────────────────┴──────────────┘
   Requirements
        1. If path or fildes refers to a directory, the value returned shall
           apply to the directory itself.
        2. If path or fildes does not refer to a terminal file, it is
           unspecified whether an implementation supports an association of
           the variable name with the specified file.
        3. If path or fildes refers to a directory, the value returned shall
           apply to filenames within the directory.
        4. If path or fildes does not refer to a directory, it is
           unspecified whether an implementation supports an association of
           the variable name with the specified file.
        5. If path or fildes refers to a directory, the value returned shall
           be the maximum length of a relative pathname that would not cross
           any mount points when the specified directory is the working
           directory.
        6. If path refers to a FIFO, or fildes refers to a pipe or FIFO, the
           value returned shall apply to the referenced object. If path or
           fildes refers to a directory, the value returned shall apply to
           any FIFO that exists or can be created within the directory. If
           path or fildes refers to any other type of file, it is
           unspecified whether an implementation supports an association of
           the variable name with the specified file.
        7. If path or fildes refers to a directory, the value returned shall
           apply to any files, other than directories, that exist or can be
           created within the directory.
        8. If path or fildes refers to a directory, it is unspecified
           whether an implementation supports an association of the variable
           name with the specified file.
        9. If path or fildes refers to a directory, the value returned shall
           be the maximum length of the string that a symbolic link in that
           directory can contain.
       10. If path or fildes des does not refer to a regular file, it is
           unspecified whether an implementation supports an association of
           the variable name with the specified file. If an implementation
           supports such an association for other than a regular file, the
           value returned is unspecified.
