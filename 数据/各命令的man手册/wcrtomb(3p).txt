
       The functionality described on this reference page is aligned with
       the ISO C standard. Any conflict between the requirements described
       here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2008 defers to the ISO C standard.
       If s is a null pointer, the wcrtomb() function shall be equivalent to
       the call:
           wcrtomb(buf, L'\0', ps)
       where buf is an internal buffer.
       If s is not a null pointer, the wcrtomb() function shall determine
       the number of bytes needed to represent the character that
       corresponds to the wide character given by wc (including any shift
       sequences), and store the resulting bytes in the array whose first
       element is pointed to by s.  At most {MB_CUR_MAX} bytes are stored.
       If wc is a null wide character, a null byte shall be stored, preceded
       by any shift sequence needed to restore the initial shift state. The
       resulting state described shall be the initial conversion state.
       If ps is a null pointer, the wcrtomb() function shall use its own
       internal mbstate_t object, which is initialized at program start-up
       to the initial conversion state. Otherwise, the mbstate_t object
       pointed to by ps shall be used to completely describe the current
       conversion state of the associated character sequence. The
       implementation shall behave as if no function defined in this volume
       of POSIX.1‐2008 calls wcrtomb().
       The wcrtomb() function need not be thread-safe if called with a NULL
       ps argument.
       The behavior of this function shall be affected by the LC_CTYPE
       category of the current locale.
       The wcrtomb() function shall not change the setting of errno if
       successful.
