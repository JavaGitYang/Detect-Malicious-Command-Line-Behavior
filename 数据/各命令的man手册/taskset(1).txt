
       taskset is used to set or retrieve the CPU affinity of a running
       process given its pid, or to launch a new command with a given CPU
       affinity.  CPU affinity is a scheduler property that "bonds" a
       process to a given set of CPUs on the system.  The Linux scheduler
       will honor the given CPU affinity and the process will not run on any
       other CPUs.  Note that the Linux scheduler also supports natural CPU
       affinity: the scheduler attempts to keep processes on the same CPU as
       long as practical for performance reasons.  Therefore, forcing a
       specific CPU affinity is useful only in certain applications.
       The CPU affinity is represented as a bitmask, with the lowest order
       bit corresponding to the first logical CPU and the highest order bit
       corresponding to the last logical CPU.  Not all CPUs may exist on a
       given system but a mask may specify more CPUs than are present.  A
       retrieved mask will reflect only the bits that correspond to CPUs
       physically on the system.  If an invalid mask is given (i.e., one
       that corresponds to no valid CPUs on the current system) an error is
       returned.  The masks may be specified in hexadecimal (with or without
       a leading "0x"), or as a CPU list with the --cpu-list option.  For
       example,
           0x00000001  is processor #0,
           0x00000003  is processors #0 and #1,
           0xFFFFFFFF  is processors #0 through #31,
           32          is processors #1, #4, and #5,
           --cpu-list 0-2,6
                       is processors #0, #1, #2, and #6.
       When taskset returns, it is guaranteed that the given program has
       been scheduled to a legal CPU.
