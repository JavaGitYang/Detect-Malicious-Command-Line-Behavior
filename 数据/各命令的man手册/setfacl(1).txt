
       This utility sets Access Control Lists (ACLs) of files and
       directories.  On the command line, a sequence of commands is followed
       by a sequence of files (which in turn can be followed by another
       sequence of commands, ...).
       The -m and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X
       options read an ACL from a file or from standard input. The ACL entry
       format is described in Section ACL ENTRIES.
       The --set and --set-file options set the ACL of a file or a
       directory. The previous ACL is replaced.  ACL entries for this
       operation must include permissions.
       The -m (--modify) and -M (--modify-file) options modify the ACL of a
       file or directory.  ACL entries for this operation must include
       permissions.
       The -x (--remove) and -X (--remove-file) options remove ACL entries.
       It is not an error to remove an entry which does not exist.  Only ACL
       entries without the perms field are accepted as parameters, unless
       POSIXLY_CORRECT is defined.
       When reading from files using the -M and -X options, setfacl accepts
       the output getfacl produces.  There is at most one ACL entry per
       line. After a Pound sign (`#'), everything up to the end of the line
       is treated as a comment.
       If setfacl is used on a file system which does not support ACLs,
       setfacl operates on the file mode permission bits. If the ACL does
       not fit completely in the permission bits, setfacl modifies the file
       mode permission bits to reflect the ACL as closely as possible,
       writes an error message to standard error, and returns with an exit
       status greater than 0.
   PERMISSIONS
       The file owner and processes capable of CAP_FOWNER are granted the
       right to modify ACLs of a file. This is analogous to the permissions
       required for accessing the file mode. (On current Linux systems, root
       is the only user with the CAP_FOWNER capability.)
