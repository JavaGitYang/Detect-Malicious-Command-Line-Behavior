
       pvscan scans all supported LVM block devices in the system for PVs.
       Scanning with lvmetad
       pvscan operates differently when used with the lvmetad(8) daemon.
       Scanning disks is required to read LVM metadata and identify LVM PVs.
       Once read, lvmetad caches the metadata so that LVM commands can read
       it without repeatedly scanning disks.  This is helpful because
       scanning disks is time consuming, and frequent scanning may interfere
       with the normal work of the system and disks.
       When lvmetad is not used, LVM commands revert to scanning disks to
       read metadata.  Any LVM command that needs metadata will scan disks
       for it; running the pvscan command is not necessary for the sake of
       other LVM commands.
       When lvmetad is used, LVM commands avoid scanning disks by reading
       metadata from lvmetad.  When new disks appear, they must be scanned
       so their metadata can be cached in lvmetad.  This is done by the
       command pvscan --cache, which scans disks and passes the metadata to
       lvmetad.
       The pvscan --cache command is typically run automatically by system
       services when a new device appears.  Users do not generally need to
       run this command if the system and lvmetad are running properly.
       Many scripts contain unnecessary pvscan (or vgscan) commands for
       historical reasons.  To avoid disrupting the system with extraneous
       disk scanning, an ordinary pvscan (without --cache) will simply read
       metadata from lvmetad like other LVM commands.  It does not do
       anything beyond displaying the current state of the cache.
       · When given specific device name arguments, pvscan --cache will only
         read the named devices.
       · LVM udev rules and systemd services are used to initiate automatic
         device scanning.
       · To prevent devices from being scanned by pvscan --cache, add them
         to lvm.conf(5) devices/global_filter.  The devices/filter setting
         does not apply to system level scanning.  For more information,
         see:
         lvmconfig --withcomments devices/global_filter
       · If lvmetad is started or restarted after devices are visible, or if
         the global_filter has changed, then all devices must be rescanned
         for metadata with the command pvscan --cache.
       · lvmetad does not cache older metadata formats, e.g. lvm1, and will
         be temporarily disabled if they are seen.
       · To notify lvmetad about a device that is no longer present, the
         major and minor numbers must be given, not the path.
       Automatic activation
       When event-driven system services detect a new LVM device, the first
       step is to automatically scan and cache the metadata from the device.
       This is done by pvscan --cache.  A second step is to automatically
       activate LVs that are present on the new device.  This auto-
       activation is done by the same pvscan --cache command when the option
       --activate ay is included.
       Auto-activation of VGs or LVs can be enabled/disabled using:
       lvm.conf(5) activation/auto_activation_volume_list
       For more information, see:
       lvmconfig --withcomments activation/auto_activation_volume_list
       When this setting is undefined, all LVs are auto-activated (when lvm
       is fully integrated with the event-driven system services.)
       When a VG or LV is not auto-activated, traditional activation using
       vgchange or lvchange --activate is needed.
       · pvscan auto-activation can be only done in combination with
         --cache.
       · Auto-activation is designated by the "a" argument in --activate ay.
         This is meant to distinguish system generated commands from
         explicit user commands, although it can be used in any activation
         command.  Whenever it is used, the auto_activation_volume_list is
         applied.
       · Auto-activation is not yet supported for LVs that are part of
         partial or clustered volume groups.
