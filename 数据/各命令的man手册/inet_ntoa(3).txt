
       inet_aton() converts the Internet host address cp from the IPv4
       numbers-and-dots notation into binary form (in network byte order)
       and stores it in the structure that inp points to.  inet_aton()
       returns nonzero if the address is valid, zero if not.  The address
       supplied in cp can have one of the following forms:
       a.b.c.d   Each of the four numeric parts specifies a byte of the
                 address; the bytes are assigned in left-to-right order to
                 produce the binary address.
       a.b.c     Parts a and b specify the first two bytes of the binary
                 address.  Part c is interpreted as a 16-bit value that
                 defines the rightmost two bytes of the binary address.
                 This notation is suitable for specifying (outmoded) Class B
                 network addresses.
       a.b       Part a specifies the first byte of the binary address.
                 Part b is interpreted as a 24-bit value that defines the
                 rightmost three bytes of the binary address.  This notation
                 is suitable for specifying (outmoded) Class A network
                 addresses.
       a         The value a is interpreted as a 32-bit value that is stored
                 directly into the binary address without any byte
                 rearrangement.
       In all of the above forms, components of the dotted address can be
       specified in decimal, octal (with a leading 0), or hexadecimal, with
       a leading 0X).  Addresses in any of these forms are collectively
       termed IPV4 numbers-and-dots notation.  The form that uses exactly
       four decimal numbers is referred to as IPv4 dotted-decimal notation
       (or sometimes: IPv4 dotted-quad notation).
       inet_aton() returns 1 if the supplied string was successfully
       interpreted, or 0 if the string is invalid (errno is not set on
       error).
       The inet_addr() function converts the Internet host address cp from
       IPv4 numbers-and-dots notation into binary data in network byte
       order.  If the input is invalid, INADDR_NONE (usually -1) is
       returned.  Use of this function is problematic because -1 is a valid
       address (255.255.255.255).  Avoid its use in favor of inet_aton(),
       inet_pton(3), or getaddrinfo(3), which provide a cleaner way to
       indicate error return.
       The inet_network() function converts cp, a string in IPv4 numbers-
       and-dots notation, into a number in host byte order suitable for use
       as an Internet network address.  On success, the converted address is
       returned.  If the input is invalid, -1 is returned.
       The inet_ntoa() function converts the Internet host address in, given
       in network byte order, to a string in IPv4 dotted-decimal notation.
       The string is returned in a statically allocated buffer, which
       subsequent calls will overwrite.
       The inet_lnaof() function returns the local network address part of
       the Internet address in.  The returned value is in host byte order.
       The inet_netof() function returns the network number part of the
       Internet address in.  The returned value is in host byte order.
       The inet_makeaddr() function is the converse of inet_netof() and
       inet_lnaof().  It returns an Internet host address in network byte
       order, created by combining the network number net with the local
       address host, both in host byte order.
       The structure in_addr as used in inet_ntoa(), inet_makeaddr(),
       inet_lnaof() and inet_netof() is defined in <netinet/in.h> as:
           typedef uint32_t in_addr_t;
           struct in_addr {
               in_addr_t s_addr;
           };
