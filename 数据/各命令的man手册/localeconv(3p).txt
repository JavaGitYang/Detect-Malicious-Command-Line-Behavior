
       The functionality described on this reference page is aligned with
       the ISO C standard. Any conflict between the requirements described
       here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2008 defers to the ISO C standard.
       The localeconv() function shall set the components of an object with
       the type struct lconv with the values appropriate for the formatting
       of numeric quantities (monetary and otherwise) according to the rules
       of the current locale.
       The members of the structure with type char * are pointers to
       strings, any of which (except decimal_point) can point to "", to
       indicate that the value is not available in the current locale or is
       of zero length. The members with type char are non-negative numbers,
       any of which can be {CHAR_MAX} to indicate that the value is not
       available in the current locale.
       The members include the following:
       char *decimal_point
             The radix character used to format non-monetary quantities.
       char *thousands_sep
             The character used to separate groups of digits before the
             decimal-point character in formatted non-monetary quantities.
       char *grouping
             A string whose elements taken as one-byte integer values
             indicate the size of each group of digits in formatted non-
             monetary quantities.
       char *int_curr_symbol
             The international currency symbol applicable to the current
             locale.  The first three characters contain the alphabetic
             international currency symbol in accordance with those
             specified in the ISO 4217:2001 standard. The fourth character
             (immediately preceding the null byte) is the character used to
             separate the international currency symbol from the monetary
             quantity.
       char *currency_symbol
             The local currency symbol applicable to the current locale.
       char *mon_decimal_point
             The radix character used to format monetary quantities.
       char *mon_thousands_sep
             The separator for groups of digits before the decimal-point in
             formatted monetary quantities.
       char *mon_grouping
             A string whose elements taken as one-byte integer values
             indicate the size of each group of digits in formatted monetary
             quantities.
       char *positive_sign
             The string used to indicate a non-negative valued formatted
             monetary quantity.
       char *negative_sign
             The string used to indicate a negative valued formatted
             monetary quantity.
       char int_frac_digits
             The number of fractional digits (those after the decimal-point)
             to be displayed in an internationally formatted monetary
             quantity.
       char frac_digits
             The number of fractional digits (those after the decimal-point)
             to be displayed in a formatted monetary quantity.
       char p_cs_precedes
             Set to 1 if the currency_symbol precedes the value for a non-
             negative formatted monetary quantity. Set to 0 if the symbol
             succeeds the value.
       char p_sep_by_space
             Set to a value indicating the separation of the
             currency_symbol, the sign string, and the value for a non-
             negative formatted monetary quantity.
       char n_cs_precedes
             Set to 1 if the currency_symbol precedes the value for a
             negative formatted monetary quantity. Set to 0 if the symbol
             succeeds the value.
       char n_sep_by_space
             Set to a value indicating the separation of the
             currency_symbol, the sign string, and the value for a negative
             formatted monetary quantity.
       char p_sign_posn
             Set to a value indicating the positioning of the positive_sign
             for a non-negative formatted monetary quantity.
       char n_sign_posn
             Set to a value indicating the positioning of the negative_sign
             for a negative formatted monetary quantity.
       char int_p_cs_precedes
             Set to 1 or 0 if the int_curr_symbol respectively precedes or
             succeeds the value for a non-negative internationally formatted
             monetary quantity.
       char int_n_cs_precedes
             Set to 1 or 0 if the int_curr_symbol respectively precedes or
             succeeds the value for a negative internationally formatted
             monetary quantity.
       char int_p_sep_by_space
             Set to a value indicating the separation of the
             int_curr_symbol, the sign string, and the value for a non-
             negative internationally formatted monetary quantity.
       char int_n_sep_by_space
             Set to a value indicating the separation of the
             int_curr_symbol, the sign string, and the value for a negative
             internationally formatted monetary quantity.
       char int_p_sign_posn
             Set to a value indicating the positioning of the positive_sign
             for a non-negative internationally formatted monetary quantity.
       char int_n_sign_posn
             Set to a value indicating the positioning of the negative_sign
             for a negative internationally formatted monetary quantity.
       The elements of grouping and mon_grouping are interpreted according
       to the following:
       {CHAR_MAX}  No further grouping is to be performed.
       0           The previous element is to be repeatedly used for the
                   remainder of the digits.
       other       The integer value is the number of digits that comprise
                   the current group. The next element is examined to
                   determine the size of the next group of digits before the
                   current group.
       The values of p_sep_by_space, n_sep_by_space, int_p_sep_by_space, and
       int_n_sep_by_space are interpreted according to the following:
       0     No space separates the currency symbol and value.
       1     If the currency symbol and sign string are adjacent, a space
             separates them from the value; otherwise, a space separates the
             currency symbol from the value.
       2     If the currency symbol and sign string are adjacent, a space
             separates them; otherwise, a space separates the sign string
             from the value.
       For int_p_sep_by_space and int_n_sep_by_space, the fourth character
       of int_curr_symbol is used instead of a space.
       The values of p_sign_posn, n_sign_posn, int_p_sign_posn, and
       int_n_sign_posn are interpreted according to the following:
       0     Parentheses surround the quantity and currency_symbol or
             int_curr_symbol.
       1     The sign string precedes the quantity and currency_symbol or
             int_curr_symbol.
       2     The sign string succeeds the quantity and currency_symbol or
             int_curr_symbol.
       3     The sign string immediately precedes the currency_symbol or
             int_curr_symbol.
       4     The sign string immediately succeeds the currency_symbol or
             int_curr_symbol.
       The implementation shall behave as if no function in this volume of
       POSIX.1‐2008 calls localeconv().
       The localeconv() function need not be thread-safe.
