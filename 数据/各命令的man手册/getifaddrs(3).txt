
       The getifaddrs() function creates a linked list of structures
       describing the network interfaces of the local system, and stores the
       address of the first item of the list in *ifap.  The list consists of
       ifaddrs structures, defined as follows:
           struct ifaddrs {
               struct ifaddrs  *ifa_next;    /* Next item in list */
               char            *ifa_name;    /* Name of interface */
               unsigned int     ifa_flags;   /* Flags from SIOCGIFFLAGS */
               struct sockaddr *ifa_addr;    /* Address of interface */
               struct sockaddr *ifa_netmask; /* Netmask of interface */
               union {
                   struct sockaddr *ifu_broadaddr;
                                    /* Broadcast address of interface */
                   struct sockaddr *ifu_dstaddr;
                                    /* Point-to-point destination address */
               } ifa_ifu;
           #define              ifa_broadaddr ifa_ifu.ifu_broadaddr
           #define              ifa_dstaddr   ifa_ifu.ifu_dstaddr
               void            *ifa_data;    /* Address-specific data */
           };
       The ifa_next field contains a pointer to the next structure on the
       list, or NULL if this is the last item of the list.
       The ifa_name points to the null-terminated interface name.
       The ifa_flags field contains the interface flags, as returned by the
       SIOCGIFFLAGS ioctl(2) operation (see netdevice(7) for a list of these
       flags).
       The ifa_addr field points to a structure containing the interface
       address.  (The sa_family subfield should be consulted to determine
       the format of the address structure.)  This field may contain a null
       pointer.
       The ifa_netmask field points to a structure containing the netmask
       associated with ifa_addr, if applicable for the address family.  This
       field may contain a null pointer.
       Depending on whether the bit IFF_BROADCAST or IFF_POINTOPOINT is set
       in ifa_flags (only one can be set at a time), either ifa_broadaddr
       will contain the broadcast address associated with ifa_addr (if
       applicable for the address family) or ifa_dstaddr will contain the
       destination address of the point-to-point interface.
       The ifa_data field points to a buffer containing address-family-spe‚Äê
       cific data; this field may be NULL if there is no such data for this
       interface.
       The data returned by getifaddrs() is dynamically allocated and should
       be freed using freeifaddrs() when no longer needed.
