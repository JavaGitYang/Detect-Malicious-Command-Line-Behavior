
       sd_bus_message_get_monotonic_usec() returns the monotonic timestamp
       of the time the message was sent. This value is in microseconds since
       the CLOCK_MONOTONIC epoch, see clock_gettime(2) for details.
       Similarly, sd_bus_message_get_realtime_usec() returns the realtime
       (wallclock) timestamp of the time the message was sent. This value is
       in microseconds since Jan 1st, 1970, i.e. in the CLOCK_REALTIME
       clock.
       sd_bus_message_get_seqnum() returns the kernel-assigned sequence
       number of the message. The kernel assigns a global, monotonically
       increasing sequence number to all messages transmitted on the local
       system, at the time the message was sent. This sequence number is
       useful for determining message send order, even across different
       buses of the local system. The sequence number combined with the boot
       ID of the system (as returned by sd_id128_get_boot(3)) is a suitable
       globally unique identifier for bus messages.
       Note that the sending order and receiving order of messages might
       differ, in particular for broadcast messages. This means that the
       sequence number and the timestamps of messages a client reads are not
       necessarily monotonically increasing.
       These timestamps and the sequence number are attached to each message
       by the kernel and cannot be manipulated by the sender.
       Note that these timestamps are only available on some bus transports,
       and only after support for them has been negotiated with the
       sd_bus_negotiate_timestamp(3) call.
