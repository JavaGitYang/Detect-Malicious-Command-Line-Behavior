
       modprobe intelligently adds or removes a module from the Linux
       kernel: note that for convenience, there is no difference between _
       and - in module names (automatic underscore conversion is performed).
       modprobe looks in the module directory /lib/modules/`uname -r` for
       all the modules and other files, except for the optional
       configuration files in the /etc/modprobe.d directory (see
       modprobe.d(5)).  modprobe will also use module options specified on
       the kernel command line in the form of <module>.<option> and
       blacklists in the form of modprobe.blacklist=<module>.
       Note that unlike in 2.4 series Linux kernels (which are not supported
       by this tool) this version of modprobe does not do anything to the
       module itself: the work of resolving symbols and understanding
       parameters is done inside the kernel. So module failure is sometimes
       accompanied by a kernel message: see dmesg(8).
       modprobe expects an up-to-date modules.dep.bin file as generated by
       the corresponding depmod utility shipped along with modprobe (see
       depmod(8)). This file lists what other modules each module needs (if
       any), and modprobe uses this to add or remove these dependencies
       automatically.
       If any arguments are given after the modulename, they are passed to
       the kernel (in addition to any options listed in the configuration
       file).
