
       A FIFO special file (a named pipe) is similar to a pipe, except that
       it is accessed as part of the filesystem.  It can be opened by
       multiple processes for reading or writing.  When processes are
       exchanging data via the FIFO, the kernel passes all data internally
       without writing it to the filesystem.  Thus, the FIFO special file
       has no contents on the filesystem; the filesystem entry merely serves
       as a reference point so that processes can access the pipe using a
       name in the filesystem.
       The kernel maintains exactly one pipe object for each FIFO special
       file that is opened by at least one process.  The FIFO must be opened
       on both ends (reading and writing) before data can be passed.
       Normally, opening the FIFO blocks until the other end is opened also.
       A process can open a FIFO in nonblocking mode.  In this case, opening
       for read-only succeeds even if no one has opened on the write side
       yet and opening for write-only fails with ENXIO (no such device or
       address) unless the other end has already been opened.
       Under Linux, opening a FIFO for read and write will succeed both in
       blocking and nonblocking mode.  POSIX leaves this behavior undefined.
       This can be used to open a FIFO for writing while there are no
       readers available.  A process that uses both ends of the connection
       in order to communicate with itself should be very careful to avoid
       deadlocks.
