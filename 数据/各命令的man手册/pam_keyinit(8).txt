
       The pam_keyinit PAM module ensures that the invoking process has a
       session keyring other than the user default session keyring.
       The session component of the module checks to see if the process's
       session keyring is the user default, and, if it is, creates a new
       anonymous session keyring with which to replace it.
       If a new session keyring is created, it will install a link to the
       user common keyring in the session keyring so that keys common to the
       user will be automatically accessible through it.
       The session keyring of the invoking process will thenceforth be
       inherited by all its children unless they override it.
       This module is intended primarily for use by login processes. Be
       aware that after the session keyring has been replaced, the old
       session keyring and the keys it contains will no longer be
       accessible.
       This module should not, generally, be invoked by programs like su,
       since it is usually desirable for the key set to percolate through to
       the alternate context. The keys have their own permissions system to
       manage this.
       This module should be included as early as possible in a PAM
       configuration, so that other PAM modules can attach tokens to the
       keyring.
       The keyutils package is used to manipulate keys more directly. This
       can be obtained from:
       Keyutils[1]
