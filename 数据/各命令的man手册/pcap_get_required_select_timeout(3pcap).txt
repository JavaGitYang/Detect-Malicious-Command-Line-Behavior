
       pcap_get_required_select_timeout() returns, on UNIX, a pointer to a
       struct timeval containing a value that must be used as the minimum
       timeout in select(), poll(), epoll_wait(), and kevent() calls if
       pcap_get_selectable_fd() returns -1.
       The timeout that should be used in those calls must be no larger than
       the smallest of all timeouts returned by
       pcap_get_required_select_timeout() for devices from which packets
       will be captured.
       The device for which pcap_get_selectable_fd() returned -1 must be put
       in non-blocking mode with pcap_setnonblock(), and an attempt must
       always be made to read packets from the device when the select(),
       poll(), epoll_wait(), or kevent() call returns.
       Note that a device on which a read can be done without blocking may,
       on some platforms, not have any packets to read if the packet buffer
       timeout has expired.  A call to pcap_dispatch() or pcap_next_ex()
       will return 0 in this case, but will not block.
       pcap_get_required_select_timeout() is not available on Windows.
