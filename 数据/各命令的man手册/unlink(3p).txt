
       The unlink() function shall remove a link to a file. If path names a
       symbolic link, unlink() shall remove the symbolic link named by path
       and shall not affect any file or directory named by the contents of
       the symbolic link. Otherwise, unlink() shall remove the link named by
       the pathname pointed to by path and shall decrement the link count of
       the file referenced by the link.
       When the file's link count becomes 0 and no process has the file
       open, the space occupied by the file shall be freed and the file
       shall no longer be accessible. If one or more processes have the file
       open when the last link is removed, the link shall be removed before
       unlink() returns, but the removal of the file contents shall be
       postponed until all references to the file are closed.
       The path argument shall not name a directory unless the process has
       appropriate privileges and the implementation supports using unlink()
       on directories.
       Upon successful completion, unlink() shall mark for update the last
       data modification and last file status change timestamps of the
       parent directory. Also, if the file's link count is not 0, the last
       file status change timestamp of the file shall be marked for update.
       The unlinkat() function shall be equivalent to the unlink() or
       rmdir() function except in the case where path specifies a relative
       path. In this case the directory entry to be removed is determined
       relative to the directory associated with the file descriptor fd
       instead of the current working directory. If the file descriptor was
       opened without O_SEARCH, the function shall check whether directory
       searches are permitted using the current permissions of the directory
       underlying the file descriptor. If the file descriptor was opened
       with O_SEARCH, the function shall not perform the check.
       Values for flag are constructed by a bitwise-inclusive OR of flags
       from the following list, defined in <fcntl.h>:
       AT_REMOVEDIR
             Remove the directory entry specified by fd and path as a
             directory, not a normal file.
       If unlinkat() is passed the special value AT_FDCWD in the fd
       parameter, the current working directory shall be used and the
       behavior shall be identical to a call to unlink() or rmdir()
       respectively, depending on whether or not the AT_REMOVEDIR bit is set
       in flag.
