
       The functionality described on this reference page is aligned with
       the ISO C standard. Any conflict between the requirements described
       here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2008 defers to the ISO C standard.
       These functions shall convert the initial portion of the string
       pointed to by str to a type long and long long representation,
       respectively. First, they decompose the input string into three
       parts:
        1. An initial, possibly empty, sequence of white-space characters
           (as specified by isspace())
        2. A subject sequence interpreted as an integer represented in some
           radix determined by the value of base
        3. A final string of one or more unrecognized characters, including
           the terminating NUL character of the input string.
       Then they shall attempt to convert the subject sequence to an
       integer, and return the result.
       If the value of base is 0, the expected form of the subject sequence
       is that of a decimal constant, octal constant, or hexadecimal
       constant, any of which may be preceded by a '+' or '−' sign. A
       decimal constant begins with a non-zero digit, and consists of a
       sequence of decimal digits. An octal constant consists of the prefix
       '0' optionally followed by a sequence of the digits '0' to '7' only.
       A hexadecimal constant consists of the prefix 0x or 0X followed by a
       sequence of the decimal digits and letters 'a' (or 'A') to 'f' (or
       'F') with values 10 to 15 respectively.
       If the value of base is between 2 and 36, the expected form of the
       subject sequence is a sequence of letters and digits representing an
       integer with the radix specified by base, optionally preceded by a
       '+' or '−' sign. The letters from 'a' (or 'A') to 'z' (or 'Z')
       inclusive are ascribed the values 10 to 35; only letters whose
       ascribed values are less than that of base are permitted. If the
       value of base is 16, the characters 0x or 0X may optionally precede
       the sequence of letters and digits, following the sign if present.
       The subject sequence is defined as the longest initial subsequence of
       the input string, starting with the first non-white-space character
       that is of the expected form. The subject sequence shall contain no
       characters if the input string is empty or consists entirely of
       white-space characters, or if the first non-white-space character is
       other than a sign or a permissible letter or digit.
       If the subject sequence has the expected form and the value of base
       is 0, the sequence of characters starting with the first digit shall
       be interpreted as an integer constant. If the subject sequence has
       the expected form and the value of base is between 2 and 36, it shall
       be used as the base for conversion, ascribing to each letter its
       value as given above. If the subject sequence begins with a minus-
       sign, the value resulting from the conversion shall be negated. A
       pointer to the final string shall be stored in the object pointed to
       by endptr, provided that endptr is not a null pointer.
       In other than the C or POSIX locales, other implementation-defined
       subject sequences may be accepted.
       If the subject sequence is empty or does not have the expected form,
       no conversion is performed; the value of str shall be stored in the
       object pointed to by endptr, provided that endptr is not a null
       pointer.
       These functions shall not change the setting of errno if successful.
       Since 0, {LONG_MIN} or {LLONG_MIN}, and {LONG_MAX} or {LLONG_MAX} are
       returned on error and are also valid returns on success, an
       application wishing to check for error situations should set errno to
       0, then call strtol() or strtoll(), then check errno.
