
       The mprotect() function shall change the access protections to be
       that specified by prot for those whole pages containing any part of
       the address space of the process starting at address addr and
       continuing for len bytes. The parameter prot determines whether read,
       write, execute, or some combination of accesses are permitted to the
       data being mapped. The prot argument should be either PROT_NONE or
       the bitwise-inclusive OR of one or more of PROT_READ, PROT_WRITE, and
       PROT_EXEC.
       If an implementation cannot support the combination of access types
       specified by prot, the call to mprotect() shall fail.
       An implementation may permit accesses other than those specified by
       prot; however, no implementation shall permit a write to succeed
       where PROT_WRITE has not been set or shall permit any access where
       PROT_NONE alone has been set. Implementations shall support at least
       the following values of prot: PROT_NONE, PROT_READ, PROT_WRITE, and
       the bitwise-inclusive OR of PROT_READ and PROT_WRITE. If PROT_WRITE
       is specified, the application shall ensure that it has opened the
       mapped objects in the specified address range with write permission,
       unless MAP_PRIVATE was specified in the original mapping, regardless
       of whether the file descriptors used to map the objects have since
       been closed.
       The implementation may require that addr be a multiple of the page
       size as returned by sysconf().
       The behavior of this function is unspecified if the mapping was not
       established by a call to mmap().
       When mprotect() fails for reasons other than [EINVAL], the
       protections on some of the pages in the range [addr,addr+len) may
       have been changed.
