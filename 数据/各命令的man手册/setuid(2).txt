
       setuid() sets the effective user ID of the calling process.  If the
       calling process is privileged (more precisely: if the process has the
       CAP_SETUID capability in its user namespace), the real UID and saved
       set-user-ID are also set.
       Under Linux, setuid() is implemented like the POSIX version with the
       _POSIX_SAVED_IDS feature.  This allows a set-user-ID (other than
       root) program to drop all of its user privileges, do some un-
       privileged work, and then reengage the original effective user ID in
       a secure manner.
       If the user is root or the program is set-user-ID-root, special care
       must be taken: setuid() checks the effective user ID of the caller
       and if it is the superuser, all process-related user ID's are set to
       uid.  After this has occurred, it is impossible for the program to
       regain root privileges.
       Thus, a set-user-ID-root program wishing to temporarily drop root
       privileges, assume the identity of an unprivileged user, and then
       regain root privileges afterward cannot use setuid().  You can
       accomplish this with seteuid(2).
