
       The recvmsg() function shall receive a message from a connection-mode
       or connectionless-mode socket. It is normally used with
       connectionless-mode sockets because it permits the application to
       retrieve the source address of received data.
       The recvmsg() function takes the following arguments:
       socket      Specifies the socket file descriptor.
       message     Points to a msghdr structure, containing both the buffer
                   to store the source address and the buffers for the
                   incoming message. The length and format of the address
                   depend on the address family of the socket. The msg_flags
                   member is ignored on input, but may contain meaningful
                   values on output.
       flags       Specifies the type of message reception. Values of this
                   argument are formed by logically OR'ing zero or more of
                   the following values:
                   MSG_OOB     Requests out-of-band data. The significance
                               and semantics of out-of-band data are
                               protocol-specific.
                   MSG_PEEK    Peeks at the incoming message.
                   MSG_WAITALL On SOCK_STREAM sockets this requests that the
                               function block until the full amount of data
                               can be returned. The function may return the
                               smaller amount of data if the socket is a
                               message-based socket, if a signal is caught,
                               if the connection is terminated, if MSG_PEEK
                               was specified, or if an error is pending for
                               the socket.
       The recvmsg() function shall receive messages from unconnected or
       connected sockets and shall return the length of the message.
       The recvmsg() function shall return the total length of the message.
       For message-based sockets, such as SOCK_DGRAM and SOCK_SEQPACKET, the
       entire message shall be read in a single operation. If a message is
       too long to fit in the supplied buffers, and MSG_PEEK is not set in
       the flags argument, the excess bytes shall be discarded, and
       MSG_TRUNC shall be set in the msg_flags member of the msghdr
       structure. For stream-based sockets, such as SOCK_STREAM, message
       boundaries shall be ignored. In this case, data shall be returned to
       the user as soon as it becomes available, and no data shall be
       discarded.
       If the MSG_WAITALL flag is not set, data shall be returned only up to
       the end of the first message.
       If no messages are available at the socket and O_NONBLOCK is not set
       on the socket's file descriptor, recvmsg() shall block until a
       message arrives. If no messages are available at the socket and
       O_NONBLOCK is set on the socket's file descriptor, the recvmsg()
       function shall fail and set errno to [EAGAIN] or [EWOULDBLOCK].
       In the msghdr structure, the msg_name member may be a null pointer if
       the source address is not required.  Otherwise, if the socket is
       unconnected, the msg_name member points to a sockaddr structure in
       which the source address is to be stored, and the msg_namelen member
       on input specifies the length of the supplied sockaddr structure and
       on output specifies the length of the stored address.  If the actual
       length of the address is greater than the length of the supplied
       sockaddr structure, the stored address shall be truncated. If the
       socket is connected, the msg_name and msg_namelen members shall be
       ignored. The msg_iov and msg_iovlen fields are used to specify where
       the received data shall be stored.  The msg_iov member points to an
       array of iovec structures; the msg_iovlen member shall be set to the
       dimension of this array. In each iovec structure, the iov_base field
       specifies a storage area and the iov_len field gives its size in
       bytes. Each storage area indicated by msg_iov is filled with received
       data in turn until all of the received data is stored or all of the
       areas have been filled.
       Upon successful completion, the msg_flags member of the message
       header shall be the bitwise-inclusive OR of all of the following
       flags that indicate conditions detected for the received message:
       MSG_EOR     End-of-record was received (if supported by the
                   protocol).
       MSG_OOB     Out-of-band data was received.
       MSG_TRUNC   Normal data was truncated.
       MSG_CTRUNC  Control data was truncated.
