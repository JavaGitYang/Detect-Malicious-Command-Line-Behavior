
       The execveat() system call executes the program referred to by the
       combination of dirfd and pathname.  It operates in exactly the same
       way as execve(2), except for the differences described in this manual
       page.
       If the pathname given in pathname is relative, then it is interpreted
       relative to the directory referred to by the file descriptor dirfd
       (rather than relative to the current working directory of the calling
       process, as is done by execve(2) for a relative pathname).
       If pathname is relative and dirfd is the special value AT_FDCWD, then
       pathname is interpreted relative to the current working directory of
       the calling process (like execve(2)).
       If pathname is absolute, then dirfd is ignored.
       If pathname is an empty string and the AT_EMPTY_PATH flag is
       specified, then the file descriptor dirfd specifies the file to be
       executed (i.e., dirfd refers to an executable file, rather than a
       directory).
       The flags argument is a bit mask that can include zero or more of the
       following flags:
       AT_EMPTY_PATH
              If pathname is an empty string, operate on the file referred
              to by dirfd (which may have been obtained using the open(2)
              O_PATH flag).
       AT_SYMLINK_NOFOLLOW
              If the file identified by dirfd and a non-NULL pathname is a
              symbolic link, then the call fails with the error ELOOP.
