
       ether_aton() converts the 48-bit Ethernet host address asc from the
       standard hex-digits-and-colons notation into binary data in network
       byte order and returns a pointer to it in a statically allocated
       buffer, which subsequent calls will overwrite.  ether_aton() returns
       NULL if the address is invalid.
       The ether_ntoa() function converts the Ethernet host address addr
       given in network byte order to a string in standard hex-digits-and-
       colons notation, omitting leading zeros.  The string is returned in a
       statically allocated buffer, which subsequent calls will overwrite.
       The ether_ntohost() function maps an Ethernet address to the
       corresponding hostname in /etc/ethers and returns nonzero if it
       cannot be found.
       The ether_hostton() function maps a hostname to the corresponding
       Ethernet address in /etc/ethers and returns nonzero if it cannot be
       found.
       The ether_line() function parses a line in /etc/ethers format
       (ethernet address followed by whitespace followed by hostname; '#'
       introduces a comment) and returns an address and hostname pair, or
       nonzero if it cannot be parsed.  The buffer pointed to by hostname
       must be sufficiently long, for example, have the same length as line.
       The functions ether_ntoa_r() and ether_aton_r() are reentrant thread-
       safe versions of ether_ntoa() and ether_aton() respectively, and do
       not use static buffers.
       The structure ether_addr is defined in <net/ethernet.h> as:
           struct ether_addr {
               uint8_t ether_addr_octet[6];
           }
