
       The pthread_key_create() function shall create a thread-specific data
       key visible to all threads in the process. Key values provided by
       pthread_key_create() are opaque objects used to locate thread-
       specific data. Although the same key value may be used by different
       threads, the values bound to the key by pthread_setspecific() are
       maintained on a per-thread basis and persist for the life of the
       calling thread.
       Upon key creation, the value NULL shall be associated with the new
       key in all active threads. Upon thread creation, the value NULL shall
       be associated with all defined keys in the new thread.
       An optional destructor function may be associated with each key
       value.  At thread exit, if a key value has a non-NULL destructor
       pointer, and the thread has a non-NULL value associated with that
       key, the value of the key is set to NULL, and then the function
       pointed to is called with the previously associated value as its sole
       argument. The order of destructor calls is unspecified if more than
       one destructor exists for a thread when it exits.
       If, after all the destructors have been called for all non-NULL
       values with associated destructors, there are still some non-NULL
       values with associated destructors, then the process is repeated. If,
       after at least {PTHREAD_DESTRUCTOR_ITERATIONS} iterations of
       destructor calls for outstanding non-NULL values, there are still
       some non-NULL values with associated destructors, implementations may
       stop calling destructors, or they may continue calling destructors
       until no non-NULL values with associated destructors exist, even
       though this might result in an infinite loop.
