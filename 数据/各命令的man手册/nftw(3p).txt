
       The nftw() function shall recursively descend the directory hierarchy
       rooted in path.  The nftw() function has a similar effect to ftw()
       except that it takes an additional argument flags, which is a
       bitwise-inclusive OR of zero or more of the following flags:
       FTW_CHDIR   If set, nftw() shall change the current working directory
                   to each directory as it reports files in that directory.
                   If clear, nftw() shall not change the current working
                   directory.
       FTW_DEPTH   If set, nftw() shall report all files in a directory
                   before reporting the directory itself. If clear, nftw()
                   shall report any directory before reporting the files in
                   that directory.
       FTW_MOUNT   If set, nftw() shall only report files in the same file
                   system as path.  If clear, nftw() shall report all files
                   encountered during the walk.
       FTW_PHYS    If set, nftw() shall perform a physical walk and shall
                   not follow symbolic links.
       If FTW_PHYS is clear and FTW_DEPTH is set, nftw() shall follow links
       instead of reporting them, but shall not report any directory that
       would be a descendant of itself. If FTW_PHYS is clear and FTW_DEPTH
       is clear, nftw() shall follow links instead of reporting them, but
       shall not report the contents of any directory that would be a
       descendant of itself.
       At each file it encounters, nftw() shall call the user-supplied
       function fn with four arguments:
        *  The first argument is the pathname of the object.
        *  The second argument is a pointer to the stat buffer containing
           information on the object, filled in as if fstatat(), stat(), or
           lstat() had been called to retrieve the information.
        *  The third argument is an integer giving additional information.
           Its value is one of the following:
           FTW_D     The object is a directory.
           FTW_DNR   The object is a directory that cannot be read. The fn
                     function shall not be called for any of its
                     descendants.
           FTW_DP    The object is a directory and subdirectories have been
                     visited. (This condition shall only occur if the
                     FTW_DEPTH flag is included in flags.)
           FTW_F     The object is a non-directory file.
           FTW_NS    The stat() function failed on the object because of
                     lack of appropriate permission. The stat buffer passed
                     to fn is undefined. Failure of stat() for any other
                     reason is considered an error and nftw() shall return
                     âˆ’1.
           FTW_SL    The object is a symbolic link. (This condition shall
                     only occur if the FTW_PHYS flag is included in flags.)
           FTW_SLN   The object is a symbolic link that does not name an
                     existing file.  (This condition shall only occur if the
                     FTW_PHYS flag is not included in flags.)
        *  The fourth argument is a pointer to an FTW structure.  The value
           of base is the offset of the object's filename in the pathname
           passed as the first argument to fn.  The value of level indicates
           depth relative to the root of the walk, where the root level is
           0.
       The results are unspecified if the application-supplied fn function
       does not preserve the current working directory.
       The argument fd_limit sets the maximum number of file descriptors
       that shall be used by nftw() while traversing the file tree. At most
       one file descriptor shall be used for each directory level.
       The nftw() function need not be thread-safe.
