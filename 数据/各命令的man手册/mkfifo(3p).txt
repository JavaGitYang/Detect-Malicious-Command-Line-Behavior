
       The mkfifo() function shall create a new FIFO special file named by
       the pathname pointed to by path.  The file permission bits of the new
       FIFO shall be initialized from mode.  The file permission bits of the
       mode argument shall be modified by the process' file creation mask.
       When bits in mode other than the file permission bits are set, the
       effect is implementation-defined.
       If path names a symbolic link, mkfifo() shall fail and set errno to
       [EEXIST].
       The FIFO's user ID shall be set to the process' effective user ID.
       The FIFO's group ID shall be set to the group ID of the parent
       directory or to the effective group ID of the process.
       Implementations shall provide a way to initialize the FIFO's group ID
       to the group ID of the parent directory. Implementations may, but
       need not, provide an implementation-defined way to initialize the
       FIFO's group ID to the effective group ID of the calling process.
       Upon successful completion, mkfifo() shall mark for update the last
       data access, last data modification, and last file status change
       timestamps of the file. Also, the last data modification and last
       file status change timestamps of the directory that contains the new
       entry shall be marked for update.
       The mkfifoat() function shall be equivalent to the mkfifo() function
       except in the case where path specifies a relative path. In this case
       the newly created FIFO is created relative to the directory
       associated with the file descriptor fd instead of the current working
       directory. If the file descriptor was opened without O_SEARCH, the
       function shall check whether directory searches are permitted using
       the current permissions of the directory underlying the file
       descriptor. If the file descriptor was opened with O_SEARCH, the
       function shall not perform the check.
       If mkfifoat() is passed the special value AT_FDCWD in the fd
       parameter, the current working directory shall be used and the
       behavior shall be identical to a call to mkfifo().
