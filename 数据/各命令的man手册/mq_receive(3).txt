
       mq_receive() removes the oldest message with the highest priority
       from the message queue referred to by the message queue descriptor
       mqdes, and places it in the buffer pointed to by msg_ptr.  The
       msg_len argument specifies the size of the buffer pointed to by
       msg_ptr; this must be greater than or equal to the mq_msgsize
       attribute of the queue (see mq_getattr(3)).  If msg_prio is not NULL,
       then the buffer to which it points is used to return the priority
       associated with the received message.
       If the queue is empty, then, by default, mq_receive() blocks until a
       message becomes available, or the call is interrupted by a signal
       handler.  If the O_NONBLOCK flag is enabled for the message queue
       description, then the call instead fails immediately with the error
       EAGAIN.
       mq_timedreceive() behaves just like mq_receive(), except that if the
       queue is empty and the O_NONBLOCK flag is not enabled for the message
       queue description, then abs_timeout points to a structure which
       specifies how long the call will block.  This value is an absolute
       timeout in seconds and nanoseconds since the Epoch, 1970-01-01
       00:00:00 +0000 (UTC), specified in the following structure:
           struct timespec {
               time_t tv_sec;        /* seconds */
               long   tv_nsec;       /* nanoseconds */
           };
       If no message is available, and the timeout has already expired by
       the time of the call, mq_timedreceive() returns immediately.
