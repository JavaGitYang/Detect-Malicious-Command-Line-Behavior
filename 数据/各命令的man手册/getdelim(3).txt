
       getline() reads an entire line from stream, storing the address of
       the buffer containing the text into *lineptr.  The buffer is null-
       terminated and includes the newline character, if one was found.
       If *lineptr is set to NULL and *n is set 0 before the call, then
       getline() will allocate a buffer for storing the line.  This buffer
       should be freed by the user program even if getline() failed.
       Alternatively, before calling getline(), *lineptr can contain a
       pointer to a malloc(3)-allocated buffer *n bytes in size.  If the
       buffer is not large enough to hold the line, getline() resizes it
       with realloc(3), updating *lineptr and *n as necessary.
       In either case, on a successful call, *lineptr and *n will be updated
       to reflect the buffer address and allocated size respectively.
       getdelim() works like getline(), except that a line delimiter other
       than newline can be specified as the delimiter argument.  As with
       getline(), a delimiter character is not added if one was not present
       in the input before end of file was reached.
