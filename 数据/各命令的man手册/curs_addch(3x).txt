
   Adding characters
       The addch, waddch, mvaddch and mvwaddch routines put the character ch
       into the given window at its current window position, which is then
       advanced.  They are analogous to putchar(3) in stdio(3).  If the
       advance is at the right margin:
       ·   The cursor automatically wraps to the beginning of the next line.
       ·   At the bottom of the current scrolling region, and if scrollok is
           enabled, the scrolling region is scrolled up one line.
       ·   If scrollok is not enabled, writing a character at the lower
           right margin succeeds.  However, an error is returned because it
           is not possible to wrap to a new line
       If ch is a tab, newline, carriage return or backspace, the cursor is
       moved appropriately within the window:
       ·   Backspace moves the cursor one character left; at the left edge
           of a window it does nothing.
       ·   Carriage return moves the cursor to the window left margin on the
           current line.
       ·   Newline does a clrtoeol, then moves the cursor to the window left
           margin on the next line, scrolling the window if on the last
           line.
       ·   Tabs are considered to be at every eighth column.  The tab
           interval may be altered by setting the TABSIZE variable.
       If ch is any other control character, it is drawn in ^X notation.
       Calling winch after adding a control character does not return the
       character itself, but instead returns the ^-representation of the
       control character.
       Video attributes can be combined with a character argument passed to
       addch or related functions by logical-ORing them into the character.
       (Thus, text, including attributes, can be copied from one place to
       another using inch(3X) and addch.)  See the curs_attr(3X) page for
       values of predefined video attribute constants that can be usefully
       OR'ed into characters.
   Echoing characters
       The echochar and wechochar routines are equivalent to a call to addch
       followed by a call to refresh(3X), or a call to waddch followed by a
       call to wrefresh.  The knowledge that only a single character is
       being output is used and, for non-control characters, a considerable
       performance gain may be seen by using these routines instead of their
       equivalents.
   Line Graphics
       The following variables may be used to add line drawing characters to
       the screen with routines of the addch family.  The default character
       listed below is used if the acsc capability does not define a
       terminal-specific replacement for it, or if the terminal and locale
       configuration requires Unicode but the library is unable to use
       Unicode.
       The names are taken from VT100 nomenclature.
       ACS            ACS       acsc   Glyph
       Name           Default   char   Name
       ─────────────────────────────────────────────────────────
       ACS_BLOCK      #         0      solid square block
       ACS_BOARD      #         h      board of squares
       ACS_BTEE       +         v      bottom tee
       ACS_BULLET     o         ~      bullet
       ACS_CKBOARD    :         a      checker board (stipple)
       ACS_DARROW     v         .      arrow pointing down
       ACS_DEGREE     '         f      degree symbol
       ACS_DIAMOND    +         `      diamond
       ACS_GEQUAL     >         >      greater-than-or-equal-to
       ACS_HLINE      -         q      horizontal line
       ACS_LANTERN    #         i      lantern symbol
       ACS_LARROW     <         ,      arrow pointing left
       ACS_LEQUAL     <         y      less-than-or-equal-to
       ACS_LLCORNER   +         m      lower left-hand corner
       ACS_LRCORNER   +         j      lower right-hand corner
       ACS_LTEE       +         t      left tee
       ACS_NEQUAL     !         |      not-equal
       ACS_PI         *         {      greek pi
       ACS_PLMINUS    #         g      plus/minus
       ACS_PLUS       +         n      plus
       ACS_RARROW     >         +      arrow pointing right
       ACS_RTEE       +         u      right tee
       ACS_S1         -         o      scan line 1
       ACS_S3         -         p      scan line 3
       ACS_S7         -         r      scan line 7
       ACS_S9         _         s      scan line 9
       ACS_STERLING   f         }      pound-sterling symbol
       ACS_TTEE       +         w      top tee
       ACS_UARROW     ^         -      arrow pointing up
       ACS_ULCORNER   +         l      upper left-hand corner
       ACS_URCORNER   +         k      upper right-hand corner
       ACS_VLINE      |         x      vertical line
