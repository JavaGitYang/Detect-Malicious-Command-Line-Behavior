
       ecb_crypt() and cbc_crypt() implement the NBS DES (Data Encryption
       Standard).  These routines are faster and more general purpose than
       crypt(3).  They also are able to utilize DES hardware if it is
       available.  ecb_crypt() encrypts in ECB (Electronic Code Book) mode,
       which encrypts blocks of data independently.  cbc_crypt() encrypts in
       CBC (Cipher Block Chaining) mode, which chains together successive
       blocks.  CBC mode protects against insertions, deletions and
       substitutions of blocks.  Also, regularities in the clear text will
       not appear in the cipher text.
       Here is how to use these routines.  The first argument, key, is the
       8-byte encryption key with parity.  To set the key's parity, which
       for DES is in the low bit of each byte, use des_setparity().  The
       second argument, data, contains the data to be encrypted or
       decrypted.  The third argument, datalen, is the length in bytes of
       data, which must be a multiple of 8.  The fourth argument, mode, is
       formed by ORing together some things.  For the encryption direction
       OR in either DES_ENCRYPT or DES_DECRYPT.  For software versus
       hardware encryption, OR in either DES_HW or DES_SW.  If DES_HW is
       specified, and there is no hardware, then the encryption is performed
       in software and the routine returns DESERR_NOHWDEVICE.  For
       cbc_crypt(), the argument ivec is the 8-byte initialization vector
       for the chaining.  It is updated to the next initialization vector
       upon return.
