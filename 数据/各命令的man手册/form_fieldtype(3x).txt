
       The function new_fieldtype creates a new field type usable for data
       validation.  You supply it with field_check, a predicate to check the
       validity of an entered data string whenever the user attempts to
       leave a field.  The (FIELD *) argument is passed in so the validation
       predicate can see the field's buffer, sizes and other attributes; the
       second argument is an argument-block structure, about which more
       below.
       You also supply new_fieldtype with char_check, a function to validate
       input characters as they are entered; it will be passed the character
       to be checked and a pointer to an argument-block structure.
       The function free_fieldtype frees the space allocated for a given
       validation type.
       The function set_fieldtype_arg associates three storage-management
       functions with a field type.  The make_arg function is automatically
       applied to the list of arguments you give set_field_type when
       attaching validation to a field; its job is to bundle these into an
       allocated argument-block object which can later be passed to
       validation predicated.  The other two hook arguments should copy and
       free argument-block structures.  They will be used by the forms-
       driver code.  You must supply the make_arg function, the other two
       are optional, you may supply NULL for them.  In this case it is
       assumed that make_arg does not allocate memory but simply loads the
       argument into a single scalar value.
       The function link_fieldtype creates a new field type from the two
       given types.  They are connected by an logical 'OR'.
       The form driver requests REQ_NEXT_CHOICE and REQ_PREV_CHOICE assume
       that the possible values of a field form an ordered set, and provide
       the forms user with a way to move through the set.  The
       set_fieldtype_choice function allows forms programmers to define
       successor and predecessor functions for the field type.  These
       functions take the field pointer and an argument-block structure as
       arguments.
