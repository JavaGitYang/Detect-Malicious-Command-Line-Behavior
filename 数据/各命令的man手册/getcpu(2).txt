
       The getcpu() system call identifies the processor and node on which
       the calling thread or process is currently running and writes them
       into the integers pointed to by the cpu and node arguments.  The
       processor is a unique small integer identifying a CPU.  The node is a
       unique small identifier identifying a NUMA node.  When either cpu or
       node is NULL nothing is written to the respective pointer.
       The third argument to this system call is nowadays unused, and should
       be specified as NULL unless portability to Linux 2.6.23 or earlier is
       required (see NOTES).
       The information placed in cpu is guaranteed to be current only at the
       time of the call: unless the CPU affinity has been fixed using
       sched_setaffinity(2), the kernel might change the CPU at any time.
       (Normally this does not happen because the scheduler tries to
       minimize movements between CPUs to keep caches hot, but it is
       possible.)  The caller must allow for the possibility that the
       information returned in cpu and node is no longer current by the time
       the call returns.
