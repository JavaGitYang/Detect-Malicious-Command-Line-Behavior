
       The <ndbm.h> header shall define the datum type as a structure, which
       shall include at least the following members:
           void   *dptr  A pointer to the application's data.
           size_t  dsize The size of the object pointed to by dptr.
       The <ndbm.h> header shall define the size_t type as described in
       <stddef.h>.
       The <ndbm.h> header shall define the DBM type.
       The <ndbm.h> header shall define the following symbolic constants as
       possible values for the store_mode argument to dbm_store():
       DBM_INSERT    Insertion of new entries only.
       DBM_REPLACE   Allow replacing existing entries.
       The following shall be declared as functions and may also be defined
       as macros. Function prototypes shall be provided.
           int     dbm_clearerr(DBM *);
           void    dbm_close(DBM *);
           int     dbm_delete(DBM *, datum);
           int     dbm_error(DBM *);
           datum   dbm_fetch(DBM *, datum);
           datum   dbm_firstkey(DBM *);
           datum   dbm_nextkey(DBM *);
           DBM    *dbm_open(const char *, int, mode_t);
           int     dbm_store(DBM *, datum, datum, int);
       The <ndbm.h> header shall define the mode_t type through typedef, as
       described in <sys/types.h>.
       The following sections are informative.
