
       sd_event_add_signal() adds a new UNIX process signal event source to
       an event loop. The event loop object is specified in the event
       parameter, and the event source object is returned in the source
       parameter. The signal parameter specifies the numeric signal to be
       handled (see signal(7)). The handler parameter must reference a
       function to call when the signal is received or be NULL. The handler
       function will be passed the userdata pointer, which may be chosen
       freely by the caller. The handler also receives a pointer to a
       signalfd_siginfo structure containing information about the received
       signal. See signalfd(2) for further information.
       Only a single handler may be installed for a specific signal. The
       signal will be unblocked by this call, and must be blocked before
       this function is called in all threads (using sigprocmask(2)). If the
       handler is not specified (handler is NULL), a default handler which
       causes the program to exit cleanly will be used.
       By default, the event source is enabled permanently (SD_EVENT_ON),
       but this may be changed with sd_event_source_set_enabled(3). If the
       handler function returns a negative error code, it will be disabled
       after the invocation, even if the SD_EVENT_ON mode was requested
       before.
       To destroy an event source object use sd_event_source_unref(3), but
       note that the event source is only removed from the event loop when
       all references to the event source are dropped. To make sure an event
       source does not fire anymore, even if it is still referenced, disable
       the event source using sd_event_source_set_enabled(3) with
       SD_EVENT_OFF.
       If the second parameter of sd_event_add_signal() is NULL no reference
       to the event source object is returned. In this case the event source
       is considered "floating", and will be destroyed implicitly when the
       event loop itself is destroyed.
       sd_event_source_get_signal() returns the configured signal number of
       an event source created previously with sd_event_add_signal(). It
       takes the event source object as the source parameter.
