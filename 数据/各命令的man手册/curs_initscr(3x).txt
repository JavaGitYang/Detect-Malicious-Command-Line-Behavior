
   initscr
       initscr is normally the first curses routine to call when
       initializing a program.  A few special routines sometimes need to be
       called before it; these are slk_init(3X), filter, ripoffline,
       use_env.  For multiple-terminal applications, newterm may be called
       before initscr.
       The initscr code determines the terminal type and initializes all
       curses data structures.  initscr also causes the first call to
       refresh(3X) to clear the screen.  If errors occur, initscr writes an
       appropriate error message to standard error and exits; otherwise, a
       pointer is returned to stdscr.
   newterm
       A program that outputs to more than one terminal should use the
       newterm routine for each terminal instead of initscr.  A program that
       needs to inspect capabilities, so it can continue to run in a line-
       oriented mode if the terminal cannot support a screen-oriented
       program, would also use newterm.  The routine newterm should be
       called once for each terminal.  It returns a variable of type SCREEN
       * which should be saved as a reference to that terminal.  newterm's
       arguments are
       ·   the type of the terminal to be used in place of $TERM,
       ·   a file pointer for output to the terminal, and
       ·   another file pointer for input from the terminal
       If the type parameter is NULL, $TERM will be used.
   endwin
       The program must also call endwin for each terminal being used before
       exiting from curses.  If newterm is called more than once for the
       same terminal, the first terminal referred to must be the last one
       for which endwin is called.
       A program should always call endwin before exiting or escaping from
       curses mode temporarily.  This routine
       ·   resets colors to correspond with the default color pair 0,
       ·   moves the cursor to the lower left-hand corner of the screen,
       ·   clears the remainder of the line so that it uses the default
           colors,
       ·   sets the cursor to normal visibility (see curs_set(3X)),
       ·   stops cursor-addressing mode using the exit_ca_mode terminal
           capability,
       ·   restores tty modes (see reset_shell_mode(3X)).
       Calling refresh(3X) or doupdate(3X) after a temporary escape causes
       the program to resume visual mode.
   isendwin
       The isendwin routine returns TRUE if endwin has been called without
       any subsequent calls to wrefresh, and FALSE otherwise.
   set_term
       The set_term routine is used to switch between different terminals.
       The screen reference new becomes the new current terminal.  The
       previous terminal is returned by the routine.  This is the only
       routine which manipulates SCREEN pointers; all other routines affect
       only the current terminal.
   delscreen
       The delscreen routine frees storage associated with the SCREEN data
       structure.  The endwin routine does not do this, so delscreen should
       be called after endwin if a particular SCREEN is no longer needed.
