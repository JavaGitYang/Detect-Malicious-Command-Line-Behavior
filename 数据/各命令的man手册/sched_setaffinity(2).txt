
       A thread's CPU affinity mask determines the set of CPUs on which it
       is eligible to run.  On a multiprocessor system, setting the CPU
       affinity mask can be used to obtain performance benefits.  For
       example, by dedicating one CPU to a particular thread (i.e., setting
       the affinity mask of that thread to specify a single CPU, and setting
       the affinity mask of all other threads to exclude that CPU), it is
       possible to ensure maximum execution speed for that thread.
       Restricting a thread to run on a single CPU also avoids the
       performance cost caused by the cache invalidation that occurs when a
       thread ceases to execute on one CPU and then recommences execution on
       a different CPU.
       A CPU affinity mask is represented by the cpu_set_t structure, a "CPU
       set", pointed to by mask.  A set of macros for manipulating CPU sets
       is described in CPU_SET(3).
       sched_setaffinity() sets the CPU affinity mask of the thread whose ID
       is pid to the value specified by mask.  If pid is zero, then the
       calling thread is used.  The argument cpusetsize is the length (in
       bytes) of the data pointed to by mask.  Normally this argument would
       be specified as sizeof(cpu_set_t).
       If the thread specified by pid is not currently running on one of the
       CPUs specified in mask, then that thread is migrated to one of the
       CPUs specified in mask.
       sched_getaffinity() writes the affinity mask of the thread whose ID
       is pid into the cpu_set_t structure pointed to by mask.  The
       cpusetsize argument specifies the size (in bytes) of mask.  If pid is
       zero, then the mask of the calling thread is returned.
