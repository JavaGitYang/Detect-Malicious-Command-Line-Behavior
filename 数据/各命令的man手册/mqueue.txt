
       The <mqueue.h> header shall define the mqd_t type, which is used for
       message queue descriptors. This is not an array type.
       The <mqueue.h> header shall define the pthread_attr_t, size_t, and
       ssize_t types as described in <sys/types.h>.
       The <mqueue.h> header shall define the struct timespec structure as
       described in <time.h>.
       The tag sigevent shall be declared as naming an incomplete structure
       type, the contents of which are described in the <signal.h> header.
       The <mqueue.h> header shall define the mq_attr structure, which is
       used in getting and setting the attributes of a message queue.
       Attributes are initially set when the message queue is created. An
       mq_attr structure shall have at least the following fields:
           long    mq_flags    Message queue flags.
           long    mq_maxmsg   Maximum number of messages.
           long    mq_msgsize  Maximum message size.
           long    mq_curmsgs  Number of messages currently queued.
       The following shall be declared as functions and may also be defined
       as macros. Function prototypes shall be provided.
           int      mq_close(mqd_t);
           int      mq_getattr(mqd_t, struct mq_attr *);
           int      mq_notify(mqd_t, const struct sigevent *);
           mqd_t    mq_open(const char *, int, ...);
           ssize_t  mq_receive(mqd_t, char *, size_t, unsigned *);
           int      mq_send(mqd_t, const char *, size_t, unsigned);
           int      mq_setattr(mqd_t, const struct mq_attr *restrict,
                        struct mq_attr *restrict);
           ssize_t  mq_timedreceive(mqd_t, char *restrict, size_t,
                        unsigned *restrict, const struct timespec *restrict);
           int      mq_timedsend(mqd_t, const char *, size_t, unsigned,
                        const struct timespec *);
           int      mq_unlink(const char *);
       Inclusion of the <mqueue.h> header may make visible symbols defined
       in the headers <fcntl.h>, <signal.h>, and <time.h>.
       The following sections are informative.
