
       getopt is used to break up (parse) options in command lines for easy
       parsing by shell procedures, and to check for valid options.  It uses
       the GNU getopt(3) routines to do this.
       The parameters getopt is called with can be divided into two parts:
       options which modify the way getopt will do the parsing (the options
       and the optstring in the SYNOPSIS), and the parameters which are to
       be parsed (parameters in the SYNOPSIS).  The second part will start
       at the first non-option parameter that is not an option argument, or
       after the first occurrence of '--'.  If no '-o' or '--options' option
       is found in the first part, the first parameter of the second part is
       used as the short options string.
       If the environment variable GETOPT_COMPATIBLE is set, or if the first
       parameter is not an option (does not start with a '-', the first
       format in the SYNOPSIS), getopt will generate output that is
       compatible with that of other versions of getopt(1).  It will still
       do parameter shuffling and recognize optional arguments (see section
       COMPATIBILITY for more information).
       Traditional implementations of getopt(1) are unable to cope with
       whitespace and other (shell-specific) special characters in arguments
       and non-option parameters.  To solve this problem, this
       implementation can generate quoted output which must once again be
       interpreted by the shell (usually by using the eval command).  This
       has the effect of preserving those characters, but you must call
       getopt in a way that is no longer compatible with other versions (the
       second or third format in the SYNOPSIS).  To determine whether this
       enhanced version of getopt(1) is installed, a special test option
       (-T) can be used.
