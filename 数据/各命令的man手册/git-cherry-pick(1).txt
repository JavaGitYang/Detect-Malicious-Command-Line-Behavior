
       Given one or more existing commits, apply the change each one
       introduces, recording a new commit for each. This requires your
       working tree to be clean (no modifications from the HEAD commit).
       When it is not obvious how to apply a change, the following happens:
        1. The current branch and HEAD pointer stay at the last commit
           successfully made.
        2. The CHERRY_PICK_HEAD ref is set to point at the commit that
           introduced the change that is difficult to apply.
        3. Paths in which the change applied cleanly are updated both in the
           index file and in your working tree.
        4. For conflicting paths, the index file records up to three
           versions, as described in the "TRUE MERGE" section of
           git-merge(1). The working tree files will include a description
           of the conflict bracketed by the usual conflict markers <<<<<<<
           and >>>>>>>.
        5. No other modifications are made.
       See git-merge(1) for some hints on resolving such conflicts.
