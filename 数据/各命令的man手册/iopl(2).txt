
       iopl() changes the I/O privilege level of the calling process, as
       specified by the two least significant bits in level.
       This call is necessary to allow 8514-compatible X servers to run
       under Linux.  Since these X servers require access to all 65536 I/O
       ports, the ioperm(2) call is not sufficient.
       In addition to granting unrestricted I/O port access, running at a
       higher I/O privilege level also allows the process to disable
       interrupts.  This will probably crash the system, and is not
       recommended.
       Permissions are not inherited by the child process created by fork(2)
       and are not preserved across execve(2) (but see NOTES).
       The I/O privilege level for a normal process is 0.
       This call is mostly for the i386 architecture.  On many other
       architectures it does not exist or will always return an error.
