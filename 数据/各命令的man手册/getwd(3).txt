
       These functions return a null-terminated string containing an
       absolute pathname that is the current working directory of the
       calling process.  The pathname is returned as the function result and
       via the argument buf, if present.
       If the current directory is not below the root directory of the
       current process (e.g., because the process set a new filesystem root
       using chroot(2) without changing its current directory into the new
       root), then, since Linux 2.6.36, the returned path will be prefixed
       with the string "(unreachable)".  Such behavior can also be caused by
       an unprivileged user by changing the current directory into another
       mount namespace.  When dealing with paths from untrusted sources,
       callers of these functions should consider checking whether the
       returned path starts with '/' or '(' to avoid misinterpreting an
       unreachable path as a relative path.  This is no longer true under
       some C libraries; see NOTES.
       The getcwd() function copies an absolute pathname of the current
       working directory to the array pointed to by buf, which is of length
       size.
       If the length of the absolute pathname of the current working
       directory, including the terminating null byte, exceeds size bytes,
       NULL is returned, and errno is set to ERANGE; an application should
       check for this error, and allocate a larger buffer if necessary.
       As an extension to the POSIX.1-2001 standard, glibc's getcwd()
       allocates the buffer dynamically using malloc(3) if buf is NULL.  In
       this case, the allocated buffer has the length size unless size is
       zero, when buf is allocated as big as necessary.  The caller should
       free(3) the returned buffer.
       get_current_dir_name() will malloc(3) an array big enough to hold the
       absolute pathname of the current working directory.  If the
       environment variable PWD is set, and its value is correct, then that
       value will be returned.  The caller should free(3) the returned
       buffer.
       getwd() does not malloc(3) any memory.  The buf argument should be a
       pointer to an array at least PATH_MAX bytes long.  If the length of
       the absolute pathname of the current working directory, including the
       terminating null byte, exceeds PATH_MAX bytes, NULL is returned, and
       errno is set to ENAMETOOLONG.  (Note that on some systems, PATH_MAX
       may not be a compile-time constant; furthermore, its value may depend
       on the filesystem, see pathconf(3).)  For portability and security
       reasons, use of getwd() is deprecated.
