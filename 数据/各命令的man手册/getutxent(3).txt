
       New applications should use the POSIX.1-specified "utmpx" versions of
       these functions; see CONFORMING TO.
       utmpname() sets the name of the utmp-format file for the other utmp
       functions to access.  If utmpname() is not used to set the filename
       before the other functions are used, they assume _PATH_UTMP, as
       defined in <paths.h>.
       setutent() rewinds the file pointer to the beginning of the utmp
       file.  It is generally a good idea to call it before any of the other
       functions.
       endutent() closes the utmp file.  It should be called when the user
       code is done accessing the file with the other functions.
       getutent() reads a line from the current file position in the utmp
       file.  It returns a pointer to a structure containing the fields of
       the line.  The definition of this structure is shown in utmp(5).
       getutid() searches forward from the current file position in the utmp
       file based upon ut.  If ut->ut_type is one of RUN_LVL, BOOT_TIME,
       NEW_TIME, or OLD_TIME, getutid() will find the first entry whose
       ut_type field matches ut->ut_type.  If ut->ut_type is one of
       INIT_PROCESS, LOGIN_PROCESS, USER_PROCESS, or DEAD_PROCESS, getutid()
       will find the first entry whose ut_id field matches ut->ut_id.
       getutline() searches forward from the current file position in the
       utmp file.  It scans entries whose ut_type is USER_PROCESS or
       LOGIN_PROCESS and returns the first one whose ut_line field matches
       ut->ut_line.
       pututline() writes the utmp structure ut into the utmp file.  It uses
       getutid() to search for the proper place in the file to insert the
       new entry.  If it cannot find an appropriate slot for ut, pututline()
       will append the new entry to the end of the file.
