
       The seccomp_arch_exist() function tests to see if a given
       architecture has been added to the seccomp filter in ctx , where the
       seccomp_arch_add() and seccomp_arch_remove() add and remove,
       respectively, architectures from the seccomp filter.  In all three
       functions, the architecture values given in arch_token should be the
       SCMP_ARCH_* defined constants; with the SCMP_ARCH_NATIVE constant
       always referring to the native compiled architecture.  The
       seccomp_arch_native() function returns the system's architecture such
       that it will match one of the SCMP_ARCH_* constants.  While the
       seccomp_arch_resolve_name() function also returns a SCMP_ARCH_*
       constant, the returned token matches the name of the architecture
       passed as an argument to the function.
       When a seccomp filter is initialized with the call to seccomp_init(3)
       the native architecture is automatically added to the filter.
       While it is possible to remove all architectures from a filter, most
       of the libseccomp APIs will fail if the filter does not contain at
       least one architecture.
       When adding a new architecture to an existing filter, the existing
       rules will not be added to the new architecture.  However, rules
       added after adding the new architecture will be added to all of the
       architectures in the filter.
